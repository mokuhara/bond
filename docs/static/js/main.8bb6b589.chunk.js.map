{"version":3,"sources":["pages/mypage/specialist/bizpack/new/index.module.css","pages/mypage/specialist/bizpack/edit/index.module.css","pages/mypage/chat/components/createThread.module.css","pages/mypage/chat/components/messageBox.module.css","pages/mypage/client/bizpack/index/index.module.css","pages/mypage/client/bizpack/show/index.module.css","routes/privateRoute.tsx","store/storeHelper.ts","pages/utils/snackbar.tsx","libs/fetch.ts","pages/auth/authSlice.ts","pages/auth/authen/auth.tsx","pages/auth/\busageInfo/usageInfo.tsx","pages/auth/personalInfo/personalInfo.tsx","pages/auth/companyInfo/companyInfo.tsx","pages/auth/userInfo/userInfo.tsx","layouts/mypage/specialist/menuList.tsx","layouts/mypage/specialist/index.tsx","layouts/mypage/client/menuList.tsx","layouts/mypage/client/index.tsx","pages/mypage/specialist/profile/profile.tsx","pages/mypage/specialist/portfolio/portfolioIndex.tsx","pages/mypage/specialist/portfolio/portfolioCreate.tsx","pages/mypage/specialist/transaction/videMeeting/new/store/index.ts","pages/mypage/specialist/transaction/videMeeting/new/index.tsx","components/categoryIcon.tsx","pages/mypage/specialist/transaction/index/store/index.tsx","pages/mypage/specialist/transaction/index/index.tsx","pages/mypage/specialist/transaction/review/new/index.tsx","pages/mypage/specialist/transaction/review/index/store/index.ts","pages/mypage/specialist/transaction/review/index/index.tsx","pages/mypage/specialist/transaction/show/status.tsx","pages/mypage/specialist/transaction/videMeeting/index/store/index.ts","pages/mypage/specialist/transaction/videMeeting/index/index.tsx","pages/mypage/chat/firebase.ts","pages/mypage/chat/store/threadState.ts","pages/mypage/chat/store/messageState.ts","pages/mypage/chat/store/index.ts","pages/mypage/chat/components/threadLists.tsx","pages/mypage/chat/components/createThread.tsx","pages/mypage/chat/index.tsx","pages/mypage/specialist/transaction/show/index.tsx","pages/mypage/client/issue/new/store/index.ts","pages/mypage/client/issue/new/index.tsx","pages/mypage/client/issue/index/store/index.ts","pages/mypage/client/issue/index/index.tsx","pages/mypage/client/issue/show/index.tsx","pages/mypage/client/issue/edit/index.tsx","routes/mypage/client/IssueRoutes.tsx","pages/mypage/specialist/bizpack/new/store/index.ts","pages/mypage/specialist/bizpack/new/index.tsx","pages/mypage/specialist/bizpack/index/store/index.ts","pages/mypage/specialist/bizpack/index/index.tsx","pages/mypage/specialist/bizpack/edit/store/index.ts","pages/mypage/specialist/bizpack/edit/actions/index.ts","pages/mypage/specialist/bizpack/edit/index.tsx","pages/mypage/chat/thread/edit/index.tsx","pages/mypage/chat/components/messageContent.tsx","pages/mypage/chat/components/messageBox.tsx","pages/mypage/chat/components/messageCreate.tsx","pages/mypage/chat/thread/show/index.tsx","pages/mypage/client/bizpack/index/store/index.tsx","assets/img/Implement.jpg","assets/img/Operation.jpg","assets/img/Planing.jpg","pages/mypage/client/bizpack/index/bizpack.tsx","pages/mypage/client/bizpack/index/index.tsx","pages/mypage/client/bizpack/show/index.tsx","routes/routes.tsx","App.tsx","store/store.ts","index.tsx","pages/mypage/client/bizpack/index/bizpack.module.css","pages/mypage/chat/components/messageContent.module.css","layouts/mypage/specialist/menuList.module.css","layouts/mypage/client/clientMenuList.module.css"],"names":["module","exports","PrivateRoute","props","auth","Cookies","get","isAuthenticated","Boolean","routeProps","_","omit","render","innerProps","to","pathname","state","from","location","isRedirect","useAppDispatch","useDispatch","Alert","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","SnackBar","severity","message","isOpen","stateFunc","classes","useEffect","handleClose","className","Snackbar","open","autoHideDuration","onClose","defaultOptions","isCredential","options","cache","headers","token","Object","assign","credentials","apiUrl","process","path","additionalOptions","fetch","method","destroy","post","body","JSON","stringify","put","fetchAsyncLogin","createAsyncThunk","a","then","res","json","status","httpStatus","StatusOK","StatusCreated","console","error","Error","data","userId","type","fetchAsyncSignup","catch","err","fetchAsyncSendUserInfo","userInfo","authSlice","createSlice","name","initialState","authen","email","password","kana","phone","companyName","department","position","companyPhone","motivation","supportRequest","consent","isLoginView","reducers","editEmail","action","payload","editPassword","editType","editUserId","editName","editKana","editPhone","editCompanyName","editDepartment","editPosition","editCompanyPhone","editMotivation","editSupportRequest","editConsent","toggleMode","extraReducers","builder","addCase","fulfilled","set","expires","String","actions","selectAuth","selectUserInfo","selectIsLoginView","Copyright","Typography","color","align","Link","href","Date","getFullYear","Motivation","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","display","flexDirection","alignItems","avatar","secondary","main","form","submit","Auth","Type","dispatch","asyncDispatch","useSelector","history","useHistory","useState","errMessage","setErrMessage","useForm","mode","reValidateMode","register","errors","btnDisabler","unwrapResult","CookieUserType","userType","push","log","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","square","Avatar","Search","FormControl","RadioGroup","value","onChange","event","parseInt","target","FormControlLabel","Client","control","Radio","label","Specialist","TextField","fullWidth","required","id","autoComplete","autoFocus","e","inputRef","pattern","helperText","Button","disabled","onClick","justify","Box","mt","openStatus","PersonalInfo","Fragment","noValidate","CompanyInfo","UsageInfo","React","setSupportRequestValue","FormLabel","Soon","Consideration","JustLooking","bool","toLowerCase","Checkbox","checked","appBar","layout","marginLeft","marginRight","breakpoints","up","marginBottom","padding","stepper","buttons","justifyContent","button","steps","UserInfo","activeStep","setActiveStep","sendUserInfo","setTimeout","Stepper","alternativeLabel","map","Step","key","StepLabel","length","gutterBottom","step","getStepContent","validKane","match","validPhoneNumber","validCompanyPhone","validationHandler","createStyles","small","large","menuList","fontSize","menuText","fontWeight","textDecoration","MenuList","anchorEl","setAnchorEl","category","actionList","link","text","icon","direction","styles","list","List","ListItem","ListItemIcon","Badge","badgeContent","currentTarget","ListItemAvatar","alt","keepMounted","MenuItem","toolbar","paddingRight","toolbarIcon","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","Mypage","children","setOpen","clsx","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","Container","maxWidth","Profile","PortfolioIndex","PortfolioCreate","videoMeetingState","topic","join_url","start_time","VideoMeetingForm","transactionId","maxHeight","background","borderRadius","boxShadow","shadows","textField","startAt","videoMeeting","setVideoMeeting","extractJoinUrl","asyncCreateVideoMeeting","vidoMeeting","timezone","settings","use_pmi","rand","Math","round","random","top","left","transform","modalStyle","style","placeholder","InputLabelProps","shrink","format","replace","categoryState","categoryLabel","CategoryIcon","categoryId","filter","makeChip","Chip","size","summrizedTransactionState","description","transaction","ID","bizpackId","Bizpack","products","industry","scale","unitPrice","isPublic","videoMeetings","payments","isPaid","reviews","rating","statusState","columns","minWidth","tabaleHeader","tableBody","moreMenue","TransactionIndex","tableData","setTableData","createTableData","transactions","createData","page","setPage","rowsPerPage","setRowsPerPage","handleClick","setTransactionId","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","data-transaction","aria-controls","aria-haspopup","dataset","parse","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Modal","formControl","selectEmpty","customIcons","1","SentimentVeryDissatisfied","2","SentimentDissatisfied","3","SentimentSatisfied","4","SentimentSatisfiedAlt","5","SentimentVerySatisfied","IconContainer","other","CreateReview","review","setReview","asyncCreateReview","Card","CardContent","Rating","defaultValue","getLabelText","IconContainerComponent","values","multiline","rows","reviewsState","paddingLeft","user","Review","shapeReviews","getCustomIcon","find","customIcon","statusArr","Status","setTransaction","setStatus","asyncChangeStatus","Select","selected","videMeetingsState","VideoMeetings","setVideoMeetings","reshapeVideoMeetings","videoMeetingId","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","timestampToDateRecursively","constructor","Timestamp","toDate","Array","isArray","converted","wrapDocumentSnapshotData","origin","DocumentSnapshot","prototype","bind","this","threads","createdAt","updatedAt","thread","existMessages","threadId","iconUrl","threadsState","threadState","existMessagesState","messageState","moveThread","ThreadLists","setThreads","unSub","collection","where","onSnapshot","snapshot","docs","doc","editThread","ThreacNew","setThread","setValue","obj","onSubmit","add","getModalStyle","border","Chat","aria-labelledby","aria-describedby","Transaction","useLocation","existOwnReview","issueState","desiredSpecialist","requiredItem","clientInfo","budget","recruitmentCapacity","endAt","applicationDeadline","dateField","buttonContainer","Number","IssueNew","issue","setIssue","asyncCreateIssue","alert","InputLabel","labelId","categoryType","tableDataState","IssueIndex","categoryTypes","asyncGetIssues","issues","data-issue","moveIssue","buttonWrapper","Issue","deleteIssue","EditIssue","asyncUpdateIssue","IssueRoutes","exact","bizpackState","BizpackNew","_props","bizpack","setBizpack","tags","product","newTags","Switch","bizpacksState","BizPackIndex","DeleteBizpack","result","newBizpacks","bizpacks","setBizpacks","p","fetchBizpacks","nanoid","data-bizpack-id","moveEditBizpack","errorState","responseFormat","BizPackEdit","useParams","getBizpack","textAlign","setEditThread","merge","MessageBox","undefined","reg","RegExp","renderRemote","remoteContainer","src","source","timestamp","renderLocal","hoge","localContainer","MessageIndex","messages","setMessages","orderBy","MessageNew","setMessage","InputProps","endAdornment","InputAdornment","ThreadShow","context","categoryImage","useCallback","Planing","Impliment","Operation","index","imageWrapper","header","descriptionWrapper","iconWrapper","sideBar","searchContainer","iconButton","input","flex","ClientBizPackIndex","filterBizpacks","transactionBizpackIds","bizpackIds","contractedBizpackIds","includes","filteredBizpacks","reshapeBizpacks","InputBase","sidebar","ClientBizPackShow","createTransaction","specialistUserId","RootRouter","basename","SpecialistMypage","ClientMypage","App","store","configureStore","reducer","authReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb6b589.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"new_title__28Hw6\",\"container\":\"new_container__1r4-g\",\"buttonWrapper\":\"new_buttonWrapper__2v480\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"edit_title__IqtT4\",\"container\":\"edit_container__29tNT\",\"buttonWrapper\":\"edit_buttonWrapper__1q2V8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"createThread_title__3yo2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"messageBox_root__2VV2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"index_sidebar__16QFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"show_content__2H693\"};","import React from 'react'\nimport { Route, RouteProps, Redirect } from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport _ from 'lodash'\n\nconst PrivateRoute: React.FC<RouteProps> = props => {\n  const auth = Cookies.get('bdt')\n  const isAuthenticated = Boolean(auth)\n  const routeProps = _.omit(props, 'component')\n\n  const isRedirect: React.FC<RouteProps> = innerProps => {\n    if(isAuthenticated) {\n        return <Route {...props} />\n    }\n\n    const to = {\n      pathname: '/',\n      state: { from: innerProps.location }\n    }\n\n    return <Redirect to={to} />\n  }\n\n  return (\n    <Route\n      {...routeProps}\n      render={innerProps => isRedirect(innerProps)}\n    />\n  )\n}\n\nexport default PrivateRoute","import { useDispatch } from 'react-redux'\nimport { store } from \"./store\"\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()","import React, { useEffect}  from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\ntype Color = \"success\" | \"info\" | \"warning\" | \"error\"\n\ninterface profile {\n    severity: string,\n    message: string,\n    isOpen: boolean,\n    stateFunc: Function\n}\n\nexport const SnackBar:React.FC<profile> = ({severity, message, isOpen, stateFunc}) => {\n    const classes = useStyles();\n\n    useEffect(()=>{\n        stateFunc(isOpen)\n        return\n    },[isOpen, stateFunc])\n\n    const handleClose = () => {\n        // setOpen(false);\n        stateFunc(false)\n    };\n\n    return (\n    <div className={classes.root}>\n        <Snackbar open={isOpen} autoHideDuration={3000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity={severity as Color}>\n            {message}\n            </Alert>\n        </Snackbar>\n    </div>\n    );\n}\n","import Cookies from 'js-cookie'\n\nconst defaultOptions = (isCredential: boolean) => {\n  let options = {\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  }\n\n  if (isCredential) {\n    const token = Cookies.get('bdt');\n\n    options = Object.assign(options, {\n      credentials: 'include',\n      headers: {\n        \"Authorization\": `bearer ${token}`,\n      }\n    })\n  }\n\n  return options\n}\n\nexport const apiUrl = process.env.REACT_APP_API_URL\n\nexport const get = (path: string, additionalOptions: object = {}, isCredential: boolean = true): Promise<Response> => {\n  const options: object = Object.assign(defaultOptions(isCredential), additionalOptions)\n\n  return fetch(path, {\n      method: \"GET\",\n      ...options\n  })\n}\n\nexport const destroy = (path: string, additionalOptions: object = {}, isCredential: boolean = true): Promise<Response> => {\n  const options: object = Object.assign(defaultOptions(isCredential), additionalOptions)\n\n  return fetch(path, {\n      method: \"DELETE\",\n      ...options\n  })\n}\n\nexport const post = (path: string, body: object, additionalOptions: object = {}, isCredential: boolean = true): Promise<Response> => {\n  let options: object = Object.assign(defaultOptions(isCredential), additionalOptions)\n\n  return fetch(path, {\n      method: 'POST',\n      ...options,\n      body: JSON.stringify(body),\n  })\n}\n\nexport const put = (path: string, body: object, additionalOptions: object = {}, isCredential: boolean = true): Promise<Response> => {\n  let options: object = Object.assign(defaultOptions(isCredential), additionalOptions)\n\n  return fetch(path, {\n      method: 'PUT',\n      ...options,\n      body: JSON.stringify(body),\n  })\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport Cookies from 'js-cookie'\nimport { RootState } from \"../../store/store\"\nimport { post, apiUrl } from \"../../libs/fetch\"\nimport authResponse from \"./authen/auth.json\"\nimport httpStatus from \"./httpStatus.json\"\nimport postUserInfo from \"./userInfo.json\"\n\ntype AUTHRESPONSE = typeof authResponse\ntype USERINFORESPONSE = {\n    status: number\n    data: string\n}\n\ntype sendUserInfo = typeof postUserInfo\n\ntype auth = {\n    email : string\n    password : string\n    type: number\n}\n\nexport const fetchAsyncLogin = createAsyncThunk(\"auth/login\", async (auth: auth) => {\n    const res = await post(`${apiUrl}/auth/login`, auth)\n        .then(res => {\n            return res.json();\n        })\n\n    if(res.status !== httpStatus.StatusOK && res.status !== httpStatus.StatusCreated){\n        console.error(\"action=fetchAsyncLogin error: auth response error\")\n        //TODO errorHanling\n        throw new Error('action=fetchAsyncLogin error: auth response error');\n    }\n\n    if (!res.data || !res.data.token){\n        console.error(\"action=fetchAsyncLogin error: token is not found\")\n        //TODO errorHanling\n        throw new Error('action=fetchAsyncLogin error: token is not found');\n    }\n\n    return {\n        token: res.data.token,\n        userId: res.data.userId,\n        type: res.data.type\n    }\n})\n\n\nexport const fetchAsyncSignup = createAsyncThunk(\"auth/signup\", async (auth: auth) => {\n    const res = await post(`${apiUrl}/auth/signup`, auth)\n        .then(res => {\n            return res.json();\n        })\n        .catch(err => {\n            console.error(err)\n            return (\n                {\n                    data: {\n                        token: \"\",\n                        userId: -1,\n                        type: -1\n                    },\n                    status: 500\n                }\n            )\n        })\n\n    if(res.status !== httpStatus.StatusOK && res.status !== httpStatus.StatusCreated){\n        debugger;\n        //TODO errorHanling\n        throw new Error('action=fetchAsyncSignup error: auth response error');\n    }\n\n    if (!res.data || !res.data.token){\n        //TODO errorHanling\n        throw new Error('action=fetchAsyncSignup error: token is not found');\n    }\n\n    return {\n        token: res.data.token,\n        userId: res.data.userId,\n        type: res.data.type\n    }\n})\n\nexport const fetchAsyncSendUserInfo = createAsyncThunk(\"auth/sendUserInfo\", async(userInfo: sendUserInfo)=>{\n    const token = Cookies.get('bdt')\n\n    if(!token){\n        //TODO errorHanling\n        throw new Error('action=fetchAsyncSendUserInfo error: token is not found in cookie');\n    }\n\n    const res = await post(`${apiUrl}/userInfo/create`, userInfo, { \"Authorization\": `bearer ${token}` })\n        .then(res => res.json())\n        .catch(err => {\n            console.error(err)\n            return { status: 500 }\n        })\n\n    if(res.status !== httpStatus.StatusOK ){\n        //TODO errorHanling\n        throw new Error('action=fetchAsyncLogin error: auth response error');\n    }\n})\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState: {\n        authen: {\n            email: \"\",\n            password: \"\",\n            type: 1,\n        },\n        userInfo: {\n            userId: 0,\n            name: \"\",\n            kana: \"\",\n            phone: \"\",\n            companyName: \"\",\n            department: \"\",\n            position: \"\",\n            companyPhone: \"\",\n            motivation: 1,\n            supportRequest: true,\n            consent: false\n        },\n        isLoginView: true,\n    },\n    reducers: {\n        editEmail(state, action) {\n            state.authen.email = action.payload;\n        },\n        editPassword(state, action) {\n            state.authen.password = action.payload;\n        },\n        editType(state, action) {\n            state.authen.type = action.payload\n        },\n        editUserId(state, action) {\n            state.userInfo.userId = action.payload\n        },\n        editName(state, action) {\n            state.userInfo.name = action.payload\n        },\n        editKana(state, action) {\n            state.userInfo.kana = action.payload\n        },\n        editPhone(state, action) {\n            state.userInfo.phone = action.payload\n        },\n        editCompanyName(state, action) {\n            state.userInfo.companyName = action.payload\n        },\n        editDepartment(state, action) {\n            state.userInfo.department = action.payload\n        },\n        editPosition(state, action) {\n            state.userInfo.position = action.payload\n        },\n        editCompanyPhone(state, action) {\n            state.userInfo.companyPhone = action.payload\n        },\n        editMotivation(state, action) {\n            state.userInfo.motivation = action.payload\n        },\n        editSupportRequest(state, action) {\n            state.userInfo.supportRequest = action.payload\n        },\n        editConsent(state, action) {\n            state.userInfo.consent = action.payload\n        },\n        toggleMode(state) {\n            state.isLoginView = !state.isLoginView\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchAsyncLogin.fulfilled, (state, action)=>{\n            const { userId, token, type } = action.payload\n            Cookies.set('bdt', token, { expires: 1/24 });\n            Cookies.set('bd-uid', String(userId), { expires: 1/24 });\n            Cookies.set('bd-type', String(type), { expires: 1/24 });\n            return {\n                ...state,\n                userInfo: {\n                    ...state[\"userInfo\"],\n                    userId: userId\n                }\n            }\n        })\n        builder.addCase(fetchAsyncSignup.fulfilled, (state, action)=>{\n            const { userId, token, type } = action.payload\n            Cookies.set('bdt', token, { expires: 1/24 });\n            Cookies.set('bd-uid', String(userId), { expires: 1/24 });\n            Cookies.set('bd-type', String(type), { expires: 1/24 });\n            return {\n                ...state,\n                userInfo: {\n                    ...state[\"userInfo\"],\n                    userId: userId\n                }\n            }\n        })\n        builder.addCase(fetchAsyncSendUserInfo.fulfilled, (state, action) =>{\n            return state\n        })\n    }\n})\n\nexport const { editEmail, editPassword, editType, editUserId, editName, editKana, editPhone, editCompanyName,  editDepartment, editPosition, editCompanyPhone, editMotivation , editSupportRequest, editConsent, toggleMode } = authSlice.actions\nexport const selectAuth = (state: RootState) => state.auth.authen\nexport const selectUserInfo = (state: RootState) => state.auth.userInfo\nexport const selectIsLoginView = (state: RootState) => state.auth.isLoginView\n\nexport default authSlice.reducer","import React , {useState} from \"react\";\nimport { Button, Avatar, CssBaseline, TextField,  Link, Paper, Box, Grid, Typography,  FormControl, RadioGroup, FormControlLabel, Radio} from \"@material-ui/core\"\nimport { Search } from \"@material-ui/icons\"\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport Cookies from 'js-cookie'\n\nimport { useAppDispatch } from \"../../../store/storeHelper\";\nimport { SnackBar } from \"../../utils/snackbar\"\n\nimport {\n    editEmail,\n    editPassword,\n    editType,\n    toggleMode,\n    fetchAsyncLogin,\n    fetchAsyncSignup,\n    selectAuth,\n    selectIsLoginView,\n} from \"../authSlice\"\n\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          omochi\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      backgroundImage: 'url(https://honote.macromill.com/uploads/20180515-main.png)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\nconst Auth: React.FC = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const asyncDispatch = useAppDispatch();\n    const authen = useSelector(selectAuth)\n    const isLoginView = useSelector(selectIsLoginView)\n    const history = useHistory()\n    const [errMessage, setErrMessage] = useState({severity: \"error\", message: \"\", isOpen: false})\n    const { register, errors } = useForm({\n      mode: 'onBlur',\n      reValidateMode: 'onChange'\n    });\n    const btnDisabler = authen.email === \"\" || authen.password === \"\" || Boolean(errors.email) || Boolean(errors.password)\n    const changeOpenStatus = (openStatus: boolean) => { setErrMessage({...errMessage, isOpen: openStatus})}\n\n\n    const auth = async () => {\n        if (isLoginView) {\n          asyncDispatch(fetchAsyncLogin(authen))\n            .then(unwrapResult)\n            .then(() =>{\n              const CookieUserType = Cookies.get('bd-type')\n              const userType = {\n                specialist : \"1\",\n                client: \"2\"\n              }\n              if(CookieUserType === userType.specialist){\n                history.push(`/mypage/specialist`)\n              }else if (CookieUserType === userType.client) {\n                history.push(`/mypage/client`)\n              }\n            })\n            .catch(error => {\n              console.error(error)\n              setErrMessage({...errMessage, message: \"ログインに失敗しました\", isOpen: true})\n              history.push(\"/\")\n            });\n        } else {\n          asyncDispatch(fetchAsyncSignup(authen))\n            .then(unwrapResult)\n            .then(()=>{\n              console.log(`/userInfo`)\n              history.push(`/userInfo`)\n            })\n            .catch(error => {\n              console.error(error)\n              setErrMessage({...errMessage, message: \"sign upに失敗しました\", isOpen: true})\n              history.push(\"/\")\n            });\n        }\n        return\n    }\n\n    const handleChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n      dispatch(editType(parseInt(event.target.value, 10)))\n    }\n\n    enum Type {\n      Specialist = 1,\n      Client,\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <Search />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                     Omoch\n                    </Typography>\n                        <FormControl component=\"label\">\n                            {!isLoginView && <RadioGroup\n                                value={authen.type}\n                                onChange={handleChange}\n                            >\n                                <FormControlLabel\n                                    value={Type.Client}\n                                    control={<Radio />}\n                                    label=\"案件を依頼する\"\n                                />\n                                <FormControlLabel\n                                    value={Type.Specialist}\n                                    control={<Radio />}\n                                    label=\"依頼に提案する\"\n                                />\n                            </RadioGroup>}\n                        </FormControl>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"email\"\n                            label=\"email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            value={authen.email}\n                            onChange={(e)=> dispatch(editEmail(e.target.value))}\n                            inputRef={register({ pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/})}\n                            error={Boolean(errors.email)}\n                            helperText={errors.email && \"メールアドレスの形式で入力してください(hoge@gmail.com)\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"password\"\n                            label=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={(e)=> dispatch(editPassword(e.target.value))}\n                            inputRef={register({ pattern: /^[a-zA-Z0-9!-/:-@¥[-`{-~]*$/})}\n                            error={Boolean(errors.password)}\n                            helperText={errors.password && \"半角英数字記号で入力してください\"}\n                        />\n                        <Button\n                            fullWidth\n                            // type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={btnDisabler}\n                            onClick={auth}\n                        >\n                            {isLoginView ? \"ログインする\": \"新規登録する\"}\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link\n                                  variant=\"body2\"\n                                  onClick={() => dispatch(toggleMode())}\n                                >\n                                {isLoginView? \"アカウント作成はこちら\": \"ログインはこちら\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                             <Copyright />\n                        </Box>\n                        {errMessage.isOpen && <SnackBar severity={errMessage.severity} message={errMessage.message} isOpen={errMessage.isOpen} stateFunc={changeOpenStatus}/>}\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Auth","import React from \"react\"\nimport {Grid, FormLabel, FormControl, FormControlLabel, Radio, RadioGroup, Checkbox} from \"@material-ui/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\n\nimport {\n    editMotivation,\n    editSupportRequest,\n    editConsent,\n    selectUserInfo\n} from \"../authSlice\"\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n}))\n\nenum Motivation {\n    Soon = 1,\n    Consideration,\n    JustLooking,\n}\n\nconst UsageInfo: React.FC = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const userInfo = useSelector(selectUserInfo)\n    const [supportRequest, setSupportRequestValue] = React.useState<string>(\"true\");\n\n    const toBoolean = (booleanStr: string): boolean => {\n        return  booleanStr.toLowerCase() === \"true\";\n    }\n\n    const handleMotivationChange = (event:  React.ChangeEvent<HTMLInputElement>)=> {\n        dispatch(editMotivation(parseInt(event.target.value, 10)))\n    }\n\n    const handleSupportChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        const bool = toBoolean(event.target.value)\n        dispatch(editSupportRequest(bool))\n        setSupportRequestValue(event.target.value)\n    }\n\n    const handleConsentChange = (event:  React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(editConsent(event.target.checked))\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <form className={classes.form} noValidate>\n                        {/* TODO validation追加 */}\n                        <FormControl component=\"label\">\n                            <FormLabel component=\"label\">現在の状況</FormLabel>\n                            <RadioGroup\n                                value={userInfo.motivation}\n                                onChange={handleMotivationChange}\n                            >\n                                <FormControlLabel\n                                    value={Motivation.Soon}\n                                    control={<Radio />}\n                                    label=\"すぐ依頼したいことがある\"\n                                />\n                                <FormControlLabel\n                                    value={Motivation.Consideration}\n                                    control={<Radio />}\n                                    label=\"依頼を検討している\"\n                                />\n                                <FormControlLabel\n                                    value={Motivation.JustLooking}\n                                    control={<Radio />}\n                                    label=\"現状依頼するつもりはない\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <FormControl component=\"label\">\n                            <FormLabel component=\"label\">サポート希望</FormLabel>\n                            <RadioGroup\n                                value={supportRequest}\n                                onChange={handleSupportChange}\n                            >\n                                <FormControlLabel\n                                    value={\"true\"}\n                                    control={<Radio />}\n                                    label=\"チャットでサポートしてほしい\"\n                                />\n                                <FormControlLabel\n                                    value={\"false\"}\n                                    control={<Radio />}\n                                    label=\"サポートは必要ない\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <FormControl component=\"label\">\n                             <FormLabel component=\"label\">同意</FormLabel>\n                                <FormControlLabel\n                                    control={\n                                    <Checkbox\n                                        checked={userInfo.consent}\n                                        onChange={handleConsentChange}\n                                        name=\"consent\"\n                                        color=\"primary\"\n                                    />\n                                    }\n                                    label=\"同意しますか？\"\n                                />\n                        </FormControl>\n                    </form>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default UsageInfo","import React from \"react\"\nimport {Grid, TextField} from \"@material-ui/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\n\nimport {\n    editName,\n    editKana,\n    editPhone,\n    selectUserInfo\n} from \"../authSlice\"\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n}))\n\nconst PersonalInfo: React.FC = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const userInfo = useSelector(selectUserInfo)\n    const { register, errors } = useForm({\n        mode: 'onBlur',\n        reValidateMode: 'onChange'\n      });\n\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <form className={classes.form} noValidate>\n                        {/* TODO validation追加 */}\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"name\"\n                            label=\"name\"\n                            name=\"name\"\n                            autoComplete=\"name\"\n                            autoFocus\n                            value={userInfo.name}\n                            onChange={(e)=> dispatch(editName(e.target.value))}\n                            inputRef={register({ required: true })}\n                            error={Boolean(errors.name)}\n                            helperText={errors.name && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"kana\"\n                            label=\"kana\"\n                            name=\"kana\"\n                            autoComplete=\"kana\"\n                            autoFocus\n                            value={userInfo.kana}\n                            onChange={(e)=> dispatch(editKana(e.target.value))}\n                            inputRef={register({ pattern: /^[ァ-ンヴー]*$/})}\n                            error={Boolean(errors.kana)}\n                            helperText={errors.kana && \"全角カタカナで入力してください\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"phone\"\n                            label=\"phone\"\n                            name=\"phone\"\n                            autoComplete=\"phone\"\n                            autoFocus\n                            value={userInfo.phone}\n                            onChange={(e)=> {dispatch(editPhone(e.target.value))}}\n                            inputRef={register({ pattern: /^0\\d{2,3}-\\d{1,4}-\\d{4}$/})}\n                            error={Boolean(errors.phone)}\n                            helperText={errors.phone && \"ハイフン(-)つきの電話番号を入力してください\"}\n                        />\n                    </form>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default PersonalInfo","import React from \"react\"\nimport {Grid, TextField} from \"@material-ui/core\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {makeStyles, Theme} from \"@material-ui/core/styles\";\nimport { useForm } from 'react-hook-form';\n\nimport {\n    editCompanyName,\n    editDepartment,\n    editPosition,\n    editCompanyPhone,\n    selectUserInfo\n} from \"../authSlice\"\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n      },\n}))\n\nconst CompanyInfo: React.FC = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const userInfo = useSelector(selectUserInfo)\n    const { register, errors } = useForm({\n        mode: 'onBlur',\n        reValidateMode: 'onChange'\n      });\n\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <form className={classes.form} noValidate>\n                        {/* TODO validation追加 */}\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"companyName\"\n                            label=\"companyName\"\n                            name=\"companyName\"\n                            autoComplete=\"companyName\"\n                            autoFocus\n                            value={userInfo.companyName}\n                            onChange={(e)=> dispatch(editCompanyName(e.target.value))}\n                            inputRef={register({ required: true })}\n                            error={Boolean(errors.companyName)}\n                            helperText={errors.companyName && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"department\"\n                            label=\"department\"\n                            name=\"department\"\n                            autoComplete=\"department\"\n                            autoFocus\n                            value={userInfo.department}\n                            onChange={(e)=> dispatch(editDepartment(e.target.value))}\n                            inputRef={register({ required: true })}\n                            error={Boolean(errors.department)}\n                            helperText={errors.department && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"position\"\n                            label=\"position\"\n                            name=\"position\"\n                            autoComplete=\"position\"\n                            autoFocus\n                            value={userInfo.position}\n                            onChange={(e)=> dispatch(editPosition(e.target.value))}\n                            inputRef={register({ required: true })}\n                            error={Boolean(errors.position)}\n                            helperText={errors.position && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"companyPhone\"\n                            label=\"companyPhone\"\n                            name=\"companyPhone\"\n                            autoComplete=\"companyPhone\"\n                            autoFocus\n                            value={userInfo.companyPhone}\n                            onChange={(e)=> dispatch(editCompanyPhone(e.target.value))}\n                            inputRef={register({ pattern: /^0([0-9]-[0-9]{4}|[0-9]{2}-[0-9]{3}|[0-9]{3}-[0-9]{2}|[0-9]{4}-[0-9])-[0-9]{4}$/})}\n                            error={Boolean(errors.companyPhone)}\n                            helperText={errors.companyPhone && \"ハイフン(-)つきの電話番号を入力してください\"}\n                        />\n                    </form>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default CompanyInfo","import React , {useState} from 'react'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { Paper, Stepper, Step, StepLabel, Button, Typography, Grid } from \"@material-ui/core\"\nimport PersonalInfo from \"../personalInfo/personalInfo\"\nimport CompanyInfo from \"../companyInfo/companyInfo\"\nimport UsageInfo from \"../\busageInfo/usageInfo\"\nimport { useSelector } from \"react-redux\"\nimport { useHistory } from 'react-router-dom';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nimport { selectUserInfo,  fetchAsyncSendUserInfo} from \"../authSlice\"\nimport { SnackBar } from \"../../utils/snackbar\"\nimport { useAppDispatch } from \"../../../store/storeHelper\";\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    appBar: {\n      position: 'relative',\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n    },\n    stepper: {\n      padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\nconst steps = ['基本情報', '企業情報', '利用情報'];\n\nconst getStepContent = (step: number) => {\n    switch (step) {\n        case 0:\n            return <PersonalInfo />\n        case 1:\n            return <CompanyInfo />\n        case 2:\n            return <UsageInfo />\n        default:\n            throw new Error('Unknown step')\n    }\n}\n\nconst UserInfo: React.FC = () => {\n    const classes = useStyles()\n    const asyncDispatch = useAppDispatch();\n    const userInfo = useSelector(selectUserInfo)\n    const history = useHistory()\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [errMessage, setErrMessage] = useState({severity: \"error\", message: \"\", isOpen: false})\n    const changeOpenStatus = (openStatus: boolean) => { setErrMessage({...errMessage, isOpen: openStatus})}\n\n    const sendUserInfo = async () => {\n        asyncDispatch(fetchAsyncSendUserInfo(userInfo))\n            .then(unwrapResult)\n            .then(()=>{\n                setActiveStep(activeStep + 1)\n                setTimeout(() => {\n                    history.push(`/mypage/client`)\n                }, 2000);\n            })\n            .catch(error =>{\n                console.error(error)\n                setErrMessage({...errMessage, message: \"入力に誤りがあります\", isOpen: true})\n            })\n    }\n\n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n        if(activeStep === steps.length -1) {\n            sendUserInfo()\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    const validationHandler = () => {\n        switch (activeStep) {\n            case 0:\n                const validKane = userInfo.kana.match(/^[ァ-ンヴー]*$/)\n                const validPhoneNumber = userInfo.phone.match(/^0\\d{2,3}-\\d{1,4}-\\d{4}$/)\n                return !Boolean(userInfo.kana && validKane && validPhoneNumber)\n            case 1:\n                const validCompanyPhone = userInfo.companyPhone.match( /^0([0-9]-[0-9]{4}|[0-9]{2}-[0-9]{3}|[0-9]{3}-[0-9]{2}|[0-9]{4}-[0-9])-[0-9]{4}$/)\n                return !Boolean(userInfo.companyName && userInfo.department && userInfo.position && validCompanyPhone)\n            case 2:\n                return !userInfo.consent\n            default:\n                return true\n        }\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Stepper activeStep={activeStep} alternativeLabel>\n                    {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                    ))}\n                </Stepper>\n                <React.Fragment>\n                    {activeStep === steps.length ? (\n                        <React.Fragment>\n                            <Typography variant=\"h5\" gutterBottom>\n                                ご登録ありがとうございました\n                            </Typography>\n                            <Typography variant=\"subtitle1\">\n                                マイページに移動します。\n                            </Typography>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            {getStepContent(activeStep)}\n                            <div className={classes.buttons}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack}>\n                                        戻る\n                                    </Button>\n                                )}\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={validationHandler()}\n                                    onClick={handleNext}\n                                    className={classes.buttons}>\n                                        {activeStep === steps.length - 1 ? '登録する' : '次へ'}\n                                    </Button>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </React.Fragment>\n            </Paper>\n            {errMessage.isOpen && <SnackBar severity={errMessage.severity} message={errMessage.message} isOpen={errMessage.isOpen} stateFunc={changeOpenStatus}/>}\n        </Grid>\n    )\n}\n\nexport default UserInfo","import React, { MouseEvent } from 'react';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HelpIcon from '@material-ui/icons/Help';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport NextWeekIcon from '@material-ui/icons/NextWeek';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n    ListItemAvatar,\n    Avatar,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Badge,\n    Menu,\n    MenuItem,\n    Grid,\n    List,\n    CssBaseline\n} from '@material-ui/core'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport styles from './menuList.module.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n    menuList: {\n        height: '100%',\n        fontSize: '30px'\n    },\n    menuText: {\n        fontSize: 12,\n        fontWeight: 'bold',\n        textDecoration: 'none',\n    }\n  }),\n);\n\nconst MenuList: React.FC = () =>{\n    const classes = useStyles();\n    const history = useHistory()\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n      const handleClose = (category: string) => {\n        setAnchorEl(null);\n        history.push(`/mypage/${category}`)\n      };\n\n    const actionList = [\n        {link: \"/mypage/specialist/bizpacks/new\", text: \"BizBack作成\", icon: <PersonAddIcon />},\n        {link: \"/mypage/specialist/portfolio/new\", text: \"過去事例作成\", icon: <NoteAddIcon />},\n        {link: \"/mypage/specialist/bizpacks\", text: \"BizBack一覧\", icon: <AssignmentIndIcon />},\n        {link: \"/mypage/specialist/portfolio\", text: \"過去事例一覧\", icon: <LibraryBooksIcon />},\n        {link: \"/mypage/transactions\", text: \"取引一覧\", icon: <NextWeekIcon />},\n    ]\n\n    return (\n        <>\n            <Grid justify=\"space-between\" direction=\"column\" container className={classes.menuList}>\n                <CssBaseline />\n                <Grid item>\n                    <ul>\n                        {actionList && actionList.map(action =>(\n                            <li key={action.link} className={styles.list}>\n                                <Link to={action.link} className={styles.link}>\n                                    <div className={styles.list}>\n                                        <div>{action.icon}</div>\n                                        <div className={styles.text}>{action.text}</div>\n                                    </div>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </Grid>\n                <Grid item>\n                    <List>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsIcon />\n                                </Badge>\n                            </ListItemIcon>\n                            </ListItem>\n                            <ListItem button>\n                                <HelpIcon />\n                            </ListItem>\n                            <ListItem button key={1} onClick={handleClick}>\n                                <ListItemAvatar>\n                                <Avatar alt=\"user-icon\" className={classes.small}>U</Avatar>\n                                </ListItemAvatar>\n                            </ListItem>\n\n                            {/* TODO 別コンポーネントに切り出す */}\n                            <Menu\n                            id=\"simple-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={() => handleClose('profile')}>プロフィール設定（工事中）</MenuItem>\n                            <MenuItem onClick={() => handleClose('account')}>アカウント設定（工事中）</MenuItem>\n                            <MenuItem onClick={() => handleClose('credit')}>支払い設定（工事中）</MenuItem>\n                        </Menu>\n                    </List>\n                </Grid>\n            </Grid>\n        </>\n  )\n}\n\nexport default MenuList","// TODO: 削除予定, layoutsに移動\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuList from './menuList';\n\n\n\nconst drawerWidth = 170;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  menuList: {\n    height: '100%',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n\nconst Mypage: React.FC =  ({children})  => {\n  const classes = useStyles();\n  console.log('hoge')\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            mypage\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <MenuList />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {children}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Mypage","import React, { MouseEvent } from 'react';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HelpIcon from '@material-ui/icons/Help';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport NextWeekIcon from '@material-ui/icons/NextWeek';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n    ListItemAvatar,\n    Avatar,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Badge,\n    Menu,\n    MenuItem,\n    Grid,\n    List,\n    CssBaseline\n} from '@material-ui/core'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport styles from './clientMenuList.module.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n    menuList: {\n        height: '100%',\n        fontSize: '30px'\n    },\n    menuText: {\n        fontSize: 12,\n        fontWeight: 'bold',\n        textDecoration: 'none',\n    }\n  }),\n);\n\nconst MenuList: React.FC = () =>{\n    const classes = useStyles();\n    const history = useHistory()\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n      };\n\n      const handleClose = (category: string) => {\n        setAnchorEl(null);\n        history.push(`/mypage/${category}`)\n      };\n\n    const actionList = [\n        {link: \"/mypage/client/issue/new\", text: \"公募作成\", icon: <CloudUploadIcon />},\n        {link: \"/mypage/client/issue/index\", text: \"公募一覧\", icon: <CloudDoneIcon />},\n        {link: \"/mypage/client/bizpacks\", text: \"bizpack一覧\", icon: <SearchIcon />},\n        {link: \"/mypage/transactions\", text: \"取引一覧\", icon: <NextWeekIcon />},\n    ]\n\n    return (\n        <>\n            <Grid justify=\"space-between\" direction=\"column\" container className={classes.menuList}>\n                <CssBaseline />\n                <Grid item>\n                    <ul>\n                        {actionList && actionList.map(action =>(\n                            <li key={action.link} className={styles.list}>\n                                <Link to={action.link} className={styles.link}>\n                                    <div className={styles.list}>\n                                        <div>{action.icon}</div>\n                                        <div className={styles.text}>{action.text}</div>\n                                    </div>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </Grid>\n                <Grid item>\n                    <List>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsIcon />\n                                </Badge>\n                            </ListItemIcon>\n                            </ListItem>\n                            <ListItem button>\n                                <HelpIcon />\n                            </ListItem>\n                            <ListItem button key={1} onClick={handleClick}>\n                                <ListItemAvatar>\n                                <Avatar alt=\"user-icon\" className={classes.small}>U</Avatar>\n                                </ListItemAvatar>\n                            </ListItem>\n\n                            {/* TODO 別コンポーネントに切り出す */}\n                            <Menu\n                            id=\"simple-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={() => handleClose('profile')}>プロフィール設定（工事中）</MenuItem>\n                            <MenuItem onClick={() => handleClose('account')}>アカウント設定（工事中）</MenuItem>\n                            <MenuItem onClick={() => handleClose('credit')}>支払い設定（工事中）</MenuItem>\n                        </Menu>\n                    </List>\n                </Grid>\n            </Grid>\n        </>\n  )\n}\n\nexport default MenuList","// TODO: 削除予定, layoutsに移動\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuList from './menuList';\n\n\n\nconst drawerWidth = 170;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  menuList: {\n    height: '100%',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n\nconst Mypage: React.FC =  ({children})  => {\n  const classes = useStyles();\n  console.log('hoge')\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            mypage\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <MenuList />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {children}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default Mypage","import React from 'react'\n\nconst Profile:React.FC = () => {\n    return (\n        <>\n            profile\n        </>\n    )\n}\n\nexport default Profile","import React  from 'react'\n\nconst PortfolioIndex: React.FC = () => {\n    return (\n        <div>PortfolioIndex</div>\n    )\n}\n\nexport default PortfolioIndex","import React  from 'react'\n\nconst PortfolioCreate: React.FC = () => {\n    return (\n        <div>PortfolioCreate</div>\n    )\n}\n\nexport default PortfolioCreate","const videoMeetingState = {\n    topic: \"\",\n    join_url: \"\",\n    start_time: \"\"\n}\n\nexport default videoMeetingState","import React, { useState }  from 'react'\nimport { Button, TextField, Typography, FormControlLabel, Checkbox, Grid} from '@material-ui/core';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\n\nimport { post, apiUrl } from '../../../../../../libs/fetch';\nimport videoMeetingState from './store'\nimport {format} from 'date-fns'\n\n\nconst VideoMeetingForm: React.FC<{transactionId: number}> = ({transactionId}) => {\n    const useStyles = makeStyles((theme: Theme) => ({\n        root: {\n          width: '100%',\n        },\n        container: {\n          maxHeight: 440,\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            borderRadius: '4px',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n          },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 200,\n        },\n        title: {\n            fontSize: '14px',\n            margin: '0',\n            fontWeight: 'bold'\n        },\n        content: {\n            fontSize: '12px',\n            marginBottom: '10px'\n        },\n        button: {\n            marginTop: '15px'\n        }\n    }));\n    const classes = useStyles();\n\n\n    // from validation\n    const { register, errors } = useForm({\n        mode: 'onBlur',\n        reValidateMode: 'onChange'\n      })\n    const btnDisabler = Boolean(errors.topic) || Boolean(errors.startAt)\n\n\n    // videoMeeting\n    type videoMeeting = typeof videoMeetingState\n    const [videoMeeting, setVideoMeeting] = useState(videoMeetingState)\n\n    const extractJoinUrl = (videoMeeting: videoMeeting) => {\n        return videoMeeting.join_url\n    }\n\n    const asyncCreateVideoMeeting = async () => {\n        const vidoMeeting =  {\n            topic: videoMeeting.topic,\n            type: \"2\",\n            start_time: videoMeeting.start_time,\n            timezone: \"Asia/Tokyo\",\n            settings: {\n                use_pmi: \"false\"\n            },\n            transactionId: transactionId\n        }\n        post(`${apiUrl}/mypage/videomeeting/create`, vidoMeeting, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                setVideoMeeting({ ...videoMeeting, join_url: extractJoinUrl(json.data)})\n            })\n    }\n\n    const handleChange = () => {\n        setVideoMeeting({ ...videoMeeting, start_time: format(new Date(), 'yyyy-MM-dd hh:mm').replace(' ', 'T' )})\n    }\n\n\n    // modal\n    const rand = () => {\n        return Math.round(Math.random() * 20) - 10;\n      }\n\n    const getModalStyle = () => {\n    const top = 50 + rand();\n    const left = 50 + rand();\n    return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n    const [modalStyle] = useState(getModalStyle);\n\n    return (\n        <div style={modalStyle} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>web会議を作成する</Typography>\n            <p className={classes.content}>タイトルと日付を入力してください</p>\n            <form className={classes.container} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    placeholder=\"タイトル\"\n                    fullWidth\n                    required\n                    id=\"topic\"\n                    name=\"topic\"\n                    autoComplete=\"topic\"\n                    autoFocus\n                    value={videoMeeting.topic}\n                    onChange={(e)=>{setVideoMeeting({ ...videoMeeting, topic: e.target.value})}}\n                    inputRef={register({ required: true })}\n                    error={Boolean(errors.topic)}\n                    helperText={errors.topic && \"入力必須です\"}\n                />\n                <Grid container alignItems=\"center\">\n                    <Grid item xs={8}>\n                        <TextField\n                            id=\"startAt\"\n                            name=\"startAt\"\n                            type=\"datetime-local\"\n                            value={videoMeeting.start_time}\n                            className={classes.textField}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=>{setVideoMeeting({ ...videoMeeting, start_time: e.target.value})}}\n                            inputRef={register({ required: true })}\n                            error={Boolean(errors.startAt)}\n                            helperText={errors.startAt && \"入力必須です\"}\n                        />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <FormControlLabel\n                            control={\n                            <Checkbox\n                                onChange={handleChange}\n                                name=\"now\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"今から\"\n                        />\n                    </Grid>\n                </Grid>\n                <Button\n                        fullWidth\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={btnDisabler}\n                        onClick={()=>asyncCreateVideoMeeting()}\n                    >\n                        作成する\n                </Button>\n            </form>\n            {videoMeeting.join_url && (<a href={videoMeeting.join_url}>video会議はこちら</a>)}\n        </div>\n    );\n}\n\nexport default VideoMeetingForm","import React from 'react'\nimport { Chip } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport BuildIcon from '@material-ui/icons/Build';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\n\n\nconst categoryState = [\n    {id: 0, name: \"選択\"},\n    {id: 1, name: \"構築\"},\n    {id: 2, name: \"運用\"},\n]\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    categoryLabel: {\n        fontSize: '10px',\n    },\n}));\n\n\nconst CategoryIcon:React.FC<{categoryId: number}> = ({categoryId}) => {\n    const classes = useStyles();\n    const text = (categoryState.filter(category => category.id === categoryId))[0].name\n    const makeChip = (payload: {component: JSX.Element, text: string}) => {\n        return (\n            <Chip\n                size=\"small\"\n                icon={payload.component}\n                label={payload.text}\n                className={classes.categoryLabel}\n            />\n        )\n    }\n    if(categoryId === 0) {\n        return makeChip({component: <SearchIcon />, text: text})\n    } else if (categoryId === 1) {\n        return makeChip({component: <BuildIcon />, text: text})\n    } else if (categoryId === 2) {\n        return makeChip({component: <LoopIcon />, text: text})\n    }\n    return makeChip({component: <LoopIcon />, text: '未登録のカテゴリー'})\n}\n\nexport default CategoryIcon","export const transactionState = [{\n    ID: 0,\n    bizpackId: 0,\n    Bizpack: {\n        products: [{name: \"\"}],\n        category: { type: 1 },\n        title: \"\",\n        userId: 0,\n        industry: \"\",\n        scale: 0,\n        description: \"\",\n        unitPrice: 0,\n        duration: 0,\n        isPublic: false\n    },\n    status: 1,\n    videoMeetings: [{\n        id: 0,\n        topic: \"\",\n        join_url: \"\",\n        start_time: \"\"\n    }],\n    payments: [{\n        id: 0,\n        transactionId: 0,\n        isPaid: false\n    }],\n    reviews: [{\n        transactionId: 0,\n        userId: 0,\n        message: \"\",\n        rating: 0\n    }]\n}]\n\nexport const summrizedTransactionState = {\n    id: 0,\n    category: 0,\n    title: \"\",\n    status: \"\",\n    description: \"\",\n    transaction: transactionState[0]\n}\n\n\nexport const statusState = [\n    {id: 1, name: \"面談前\"},\n    {id: 2, name: \"承認前\"},\n    {id: 3, name: \"見積書送付前\"},\n    {id: 4, name: \"申込書送付前\"},\n    {id: 5, name: \"契約中(申込完了)\"},\n    {id: 6, name: \"契約終了\"},\n    {id: 7, name: \"失注\"},\n]","import React, { useEffect, useState }  from 'react'\nimport { Paper,Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Button, Menu, MenuItem , Modal, TextField} from '@material-ui/core';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\n\nimport VideoMeetingForm from '../videMeeting/new'\nimport CategoryIcon from '../../../../../components/categoryIcon'\nimport { get, apiUrl } from '../../../../../libs/fetch';\nimport { transactionState,  summrizedTransactionState, statusState } from './store'\n\ninterface Column {\n    id: 'category' | 'title' | 'status' | 'description' | 'other';\n    label: string;\n    minWidth?: number;\n    align?: 'right';\n    format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n    { id: 'category', label: 'カテゴリー', minWidth: 170 },\n    { id: 'title', label: 'タイトル', minWidth: 170 },\n    { id: 'status', label: 'ステータス', minWidth: 170 },\n    { id: 'description', label: '詳細', minWidth: 300 },\n    { id: 'other', label: 'その他', minWidth: 50}\n];\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n      width: '100%',\n    },\n    container: {\n      maxHeight: 440,\n    },\n    tabaleHeader: {\n        fontSize: '13px',\n        color: 'rgba(0,16,14,0.55)',\n    },\n    categoryLabel: {\n        fontSize: '10px',\n    },\n    tableBody: {\n        fontSize: '13px',\n    },\n    moreMenue: {\n        fontSize: '13px',\n        fontWeight: 'bold',\n        padding: '10px 20px'\n    }\n}));\n\nconst TransactionIndex: React.FC = () => {\n    const history = useHistory()\n    const classes = useStyles();\n\n\n    // form validation\n    const { register, errors } = useForm({\n        mode: 'onBlur',\n        reValidateMode: 'onChange'\n    })\n\n\n    // transaction data\n    type transaction = typeof transactionState[0]\n    type tableData = typeof summrizedTransactionState[]\n    const [tableData, setTableData] = useState([summrizedTransactionState])\n    const asyncGetTransactions = () => {\n        get(`${apiUrl}/mypage/transaction/`, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                setTableData(createTableData(json.data))\n            })\n            .catch(e => {\n                console.error(e)\n            })\n    }\n\n    const createTableData = (transactions:transaction[] ) => {\n        const createData = (transaction: transaction) => {\n            return {\n                id: transaction.ID,\n                category: transaction.Bizpack.category.type,\n                title: transaction.Bizpack.title,\n                status: (statusState.filter(status => status.id === transaction.status))[0].name,\n                description: transaction.Bizpack.description,\n                transaction: transaction\n            }\n        }\n        const result =  transactions.map(transaction => {\n            return createData(transaction)\n        })\n        return result\n    }\n\n    useEffect(() => {\n        asyncGetTransactions()\n    },[])\n\n\n    // modal\n    const [open, setOpen] = React.useState(false);\n    const handleOpenModal = () => {\n        setOpen(true);\n      };\n    const handleCloseModal = () => {\n    setOpen(false);\n    };\n\n\n    // pagenation\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n\n    // moreMenue\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const moveTransaction = (transaction: transaction) => {\n        history.push({\n            pathname: '/mypage/transaction',\n            state: {transaction}\n        })\n    }\n\n\n    // accept button\n    const dummy = () => {}\n\n    //videoMeeting\n    const [transactionId, setTransactionId] = useState(0)\n    console.log(tableData)\n    return (\n        <>\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow >\n                        {columns.map((column) => (\n                            <TableCell\n                            key={column.id}\n                            align={column.align}\n                            style={{ minWidth: column.minWidth }}\n                            className={classes.tabaleHeader}\n                            >\n                            {column.label}\n                            </TableCell>\n                        ))\n                        }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                        return (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                            {columns.map((column) => {\n                                let value : string | number | JSX.Element[] | JSX.Element\n                                if(column.id === 'other'){\n                                    return (\n                                        <TableCell >\n                                            <Button data-transaction={JSON.stringify(row.transaction)} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                                                <MoreVertIcon />\n                                            </Button>\n                                            <Menu\n                                                id=\"simple-menu\"\n                                                anchorEl={anchorEl}\n                                                keepMounted\n                                                open={Boolean(anchorEl)}\n                                                onClose={handleClose}\n                                            >\n                                                <MenuItem className={classes.moreMenue} onClick={() => {\n                                                    const data = anchorEl? anchorEl.dataset.transaction : ''\n                                                    if (data) {\n                                                        const transaction = JSON.parse(data)\n                                                        moveTransaction(transaction)\n                                                    }\n                                                }}>詳細</MenuItem>\n                                                {/* {row[\"transaction\"].status < 6 && <MenuItem onClick={() => dummy()}>受注</MenuItem>} */}\n                                                <MenuItem className={classes.moreMenue}  onClick={() => {\n                                                    const data = anchorEl? anchorEl.dataset.transaction : ''\n                                                    if (data) {\n                                                        const transaction = JSON.parse(data)\n                                                        setTransactionId(transaction.ID)\n                                                        handleOpenModal()\n                                                    }\n                                                }}>web会議作成</MenuItem>\n                                            </Menu>\n                                        </TableCell>\n                                    )\n                                } else if(column.id === 'category') {\n                                    return (<TableCell align={column.align}>\n                                        <CategoryIcon categoryId={row[column.id]}/>\n                                    </TableCell>)\n                                } else {\n                                    value = row[column.id]\n                                    return (\n                                    <TableCell align={column.align}  className={classes.tableBody}>\n                                        {value}\n                                    </TableCell>\n                                    );\n                                }\n                            })}\n                            </TableRow>\n                        );\n                        })}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 50,100]}\n                    component=\"div\"\n                    count={tableData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <Modal\n                open={open}\n                onClose={handleCloseModal}\n            >\n                <VideoMeetingForm transactionId={transactionId}/>\n            </Modal>\n        </>\n      );\n}\n\nexport default TransactionIndex\n","import React, { useState } from 'react'\nimport {Grid, TextField, Typography, Button, Card, CardContent} from '@material-ui/core'\nimport {makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Rating, { IconContainerProps } from '@material-ui/lab/Rating';\nimport {SentimentVeryDissatisfied, SentimentDissatisfied, SentimentSatisfied, SentimentSatisfiedAlt, SentimentVerySatisfied} from \"@material-ui/icons\"\nimport Cookies from 'js-cookie'\n\nimport { post, apiUrl } from '../../../../../../libs/fetch'\nimport { transactionState } from '../../index/store'\nimport reviewState from './store'\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    label: {\n        fontWeight:'bold'\n    },\n    data: {}\n    ,\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    container: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n}))\n\nconst customIcons: { [index: string]: { icon: React.ReactElement; label: string } } = {\n    1: {\n      icon: <SentimentVeryDissatisfied />,\n      label: 'Very Dissatisfied',\n    },\n    2: {\n      icon: <SentimentDissatisfied />,\n      label: 'Dissatisfied',\n    },\n    3: {\n      icon: <SentimentSatisfied />,\n      label: 'Neutral',\n    },\n    4: {\n      icon: <SentimentSatisfiedAlt />,\n      label: 'Satisfied',\n    },\n    5: {\n      icon: <SentimentVerySatisfied />,\n      label: 'Very Satisfied',\n    },\n};\n\nconst IconContainer = (props: IconContainerProps) => {\n    const { value, ...other } = props;\n    return <span {...other}>{customIcons[value].icon}</span>;\n}\n\ntype transaction = typeof transactionState[0]\nconst CreateReview: React.FC<{transaction: transaction}> = ({transaction}) => {\n    const classes = useStyles()\n\n\n    type review = typeof reviewState\n    const [review, setReview] = useState({rating:0, message:\"\"})\n    const asyncCreateReview = async (review: review) => {\n        post(`${apiUrl}/mypage/review/create`, review, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n            })\n    }\n\n    //TODO update未実装\n    type respReview = {\n        id: number,\n        transactionId: number,\n        userId: number,\n        message: string,\n        rating: number\n    }\n    const asyncUpdateReview = async (review: respReview) => {\n        post(`${apiUrl}/mypage/transaction/review/${review.id}/update`, review, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n            })\n    }\n\n    const handleReviewMessageChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const message = event.target.value\n        if (typeof message === 'string') {\n            setReview({...review, message: message})\n        }\n    }\n\n    const handleReviewRatingChange = (event :React.ChangeEvent<{}>\n        , values: number | null): void => {\n        if( typeof values === 'number') {\n            setReview({...review, rating: values})\n        }\n    }\n\n    const handleSendReview = () => {\n        const userId = Cookies.get('bd-uid')\n        if(!userId) return\n        const payload = {\n            transactionId: transaction.ID,\n            userId: parseInt(userId, 10),\n            message: review.message,\n            rating: review.rating,\n        }\n        asyncCreateReview(payload)\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>レビュー</Typography>\n            <Grid item xs={12}>\n                <Card  className={classes.container} variant=\"outlined\">\n                    <CardContent>\n                        <Grid item xs={6} className={classes.label}>\n                            評価\n                        </Grid>\n                        <Grid item xs={6} className={classes.data}>\n                            <Rating\n                                name=\"customized-icons\"\n                                defaultValue={2}\n                                getLabelText={(value: number) => customIcons[value].label}\n                                IconContainerComponent={IconContainer}\n                                onChange={(event,value) =>handleReviewRatingChange(event, value)}\n                            />\n                        </Grid>\n                        <Grid item xs={10} className={classes.label}>\n                            内容\n                        </Grid>\n                        <Grid item xs={10} className={classes.data}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                required\n                                id=\"description\"\n                                label=\"description\"\n                                name=\"description\"\n                                autoComplete=\"description\"\n                                autoFocus\n                                multiline\n                                rows={4}\n                                value={review.message}\n                                onChange={handleReviewMessageChange}\n                            />\n                        </Grid>\n                        <Button\n                            // fullWidth\n                            // type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleSendReview}\n                        >\n                            レビューする\n                        </Button>\n                    </CardContent>\n                </Card>\n            </Grid>\n\n        </>\n    )\n\n}\n\nexport default CreateReview\n","const reviewsState = [{\n    ID: 0,\n    transactionId: 0,\n    userId: 0,\n    message: \"\",\n    rating: 0\n}]\n\nexport default reviewsState","import React, {useState, useEffect} from 'react'\nimport {Grid, CssBaseline, Paper, Avatar, CardContent, Card, Typography } from '@material-ui/core'\nimport {makeStyles, Theme } from \"@material-ui/core/styles\";\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\n\nimport { get, apiUrl } from '../../../../../../libs/fetch'\nimport { transactionState } from '../../index/store'\nimport reviewsState from './store'\n\ntype transaction = typeof transactionState[0]\ntype reviews = typeof reviewsState\n\nexport const customIcons = [\n    {\n        rating: 1,\n        icon: <SentimentVeryDissatisfiedIcon />,\n        label: '大変不満',\n    },\n    {\n        rating: 2,\n        icon: <SentimentDissatisfiedIcon />,\n        label: '不満',\n    },\n    {\n        rating: 3,\n        icon: <SentimentSatisfiedIcon />,\n        label: '普通',\n    },\n    {\n        rating: 4,\n        icon: <SentimentSatisfiedAltIcon />,\n        label: '満足',\n    },\n    {\n        rating: 5,\n        icon: <SentimentVerySatisfiedIcon />,\n        label: '大変満足',\n    }\n]\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    rating: {\n        fontSize: '12px',\n    },\n    data: {\n    },\n    label: {\n        paddingLeft: '5px'\n    },\n    message: {\n        padding: '24px',\n        background: 'rgba(0,16,14,0.03)',\n        borderRadius: '4px'\n    },\n    user: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        width: theme.spacing(3),\n        height: theme.spacing(3),\n    },\n    name: {\n        paddingLeft: '5px'\n    },\n    review: {\n        margin: theme.spacing(1),\n    },\n    container: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n}))\n\nconst Review: React.FC<{transaction: transaction}> = ({transaction}) => {\n    const classes = useStyles()\n    const [reviews, setReview] = useState(reviewsState)\n\n    const shapeReviews = (reviews: reviews) => {\n        return reviews.map(review => {\n            return {\n                ID: review.ID,\n                transactionId: review.transactionId,\n                userId: review.userId,\n                message: review.message,\n                rating: review.rating\n            }\n        })\n    }\n\n    const asyncGetRevies = () => {\n        get(`${apiUrl}/mypage/review/${transaction.ID}`, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                setReview(shapeReviews(json.data))\n            })\n            .catch(e => {\n                console.error(e)\n            })\n    }\n\n    useEffect(() => {\n       asyncGetRevies()\n    }, [])\n\n    const getCustomIcon =(rating: number) => {\n        const icon = customIcons.find(customIcon => customIcon.rating === rating)\n        return icon\n    }\n\n\n    return (\n        <>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>レビュー一覧</Typography>\n            <Grid item xs={12}>\n                <Card  className={classes.container} variant=\"outlined\">\n                    <CardContent>\n                    <Grid container component=\"main\" spacing={1} justify=\"center\">\n                        <CssBaseline />\n                        {reviews.length > 0 && reviews.map(review => {\n                            return (<Grid container component=\"main\" spacing={2} key={review.ID} className={classes.review}>\n                                {/* ICON とかにする */}\n                                <Grid item xs={4}>\n                                    <div className={classes.user}>\n                                        <Avatar className={classes.icon}>H</Avatar>\n                                        <span className={classes.name}>hoge</span>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={8} className={classes.rating}>\n                                    <div className={classes.user}>\n                                        { (getCustomIcon(review.rating))?.icon}\n                                        <span className={classes.label}>{ (getCustomIcon(review.rating))?.label}</span>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <div className={classes.message}>\n                                    {review.message}\n                                    </div>\n                                </Grid>\n                            </Grid>)\n                        })}\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </>\n    )\n}\n\nexport default Review","import React, {useState} from 'react'\nimport {Grid, FormControl, MenuItem, Select } from '@material-ui/core'\nimport {makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { put, apiUrl } from '../../../../../libs/fetch'\nimport { transactionState } from '../index/store'\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\n\ntype transaction = typeof transactionState[0]\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    label: {\n        fontWeight:'bold'\n    },\n    data: {}\n    ,\n    formControl: {\n        minWidth: 120,\n        marginLeft: 0,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nconst statusArr = [\n    {id: 1, name: \"面談前\"},\n    {id: 2, name: \"承認前\"},\n    {id: 3, name: \"見積書送付前\"},\n    {id: 4, name: \"申込書送付前\"},\n    {id: 5, name: \"契約中(申込完了)\"},\n    {id: 6, name: \"契約終了\"},\n    {id: 7, name: \"失注\"},\n]\n\nconst Status: React.FC<{transaction: transaction, setTransaction:Function}> = ({transaction, setTransaction}) => {\n    const classes = useStyles()\n\n    const [status, setStatus] = useState(transaction.status)\n    const handleStatusChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const status = event.target.value\n        if (typeof status === 'number'){\n            setTransaction({...transaction, status: status})\n            setStatus(status)\n            asyncChangeStatus({...transaction, status: status})\n        }\n    };\n\n    const asyncChangeStatus = async (transaction: transaction) => {\n        put(`${apiUrl}/mypage/transaction/${transaction.ID}/update`, transaction, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n            })\n    }\n\n    return (\n        <>\n            <Grid item xs={4} className={classes.label}>\n                    ステータス\n            </Grid>\n            <Grid item xs={8} className={classes.data}>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <Select\n                    value={transaction.status}\n                    onChange={handleStatusChange}\n                    className={classes.selectEmpty}\n                    >\n                        {statusArr.map(status => {\n                            if(status.id === transaction.status) return (<MenuItem selected={true} value={status.id}>{status.name}</MenuItem>)\n                            return (<MenuItem value={status.id}>{status.name}</MenuItem>)\n                        })}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </>\n    )\n}\n\nexport default Status","const videMeetingsState = [{\n    ID: 0,\n    topic: \"\",\n    join_url: \"\",\n    start_time: \"\",\n    transactionId: \"\"\n}]\n\nexport default videMeetingsState","import React, { useState, useEffect } from 'react'\nimport { Grid, CssBaseline, Button, Table, TableHead, TableRow, TableCell, TableContainer, TableBody, Paper, CardContent, Card, Typography} from '@material-ui/core'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nimport { get, destroy, apiUrl } from '../../../../../../libs/fetch'\nimport videMeetingsState from './store'\n\nconst VideoMeetings : React.FC<{transactionId: number}> = ({transactionId}) => {\n    const useStyles = makeStyles((theme: Theme) => ({\n        tabaleHeader: {\n            fontSize: '13px',\n            color: 'rgba(0,16,14,0.55)',\n        },\n        tableBody: {\n            fontSize: '13px',\n        },\n        container: {\n            width: '100%',\n            marginBottom: '10px'\n        },\n        title: {\n            fontSize: '14px',\n            margin: '15px',\n            fontWeight: 'bold'\n        },\n    }))\n    const classes = useStyles()\n\n    type videomeetings = typeof videMeetingsState\n    const [videoMeetings, setVideoMeetings] = useState(videMeetingsState)\n\n    const reshapeVideoMeetings = (videoMeetings: videomeetings) => {\n        return videoMeetings.map(videoMeeting => {\n            return {\n                ID: videoMeeting.ID,\n                topic: videoMeeting.topic,\n                join_url: videoMeeting.join_url,\n                start_time: videoMeeting.start_time,\n                transactionId: videoMeeting.transactionId\n            }\n        })\n    }\n\n    const asyncGetVideoMeetings = () => {\n        get(`${apiUrl}/mypage/videomeeting/${transactionId}`, {}, true)\n            .then(res => res.json())\n            .then(json => {\n                setVideoMeetings(reshapeVideoMeetings(json.data))\n            })\n    }\n\n    useEffect(() => {\n        asyncGetVideoMeetings()\n    },[])\n\n    const deleteHandler = (videoMeetingId: number) => {\n        destroy(`${apiUrl}/mypage/videomeeting/${videoMeetingId}/delete`, {}, true)\n            .then(() => {\n                setVideoMeetings(videoMeetings.filter(videoMeeting => videoMeeting.ID != videoMeetingId))\n            })\n    }\n\n    return (\n        <>\n        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>設定されたミーティング一覧</Typography>\n        <Grid item xs={12}>\n            <Card  className={classes.container} variant=\"outlined\">\n                <CardContent>\n                    <Grid container component=\"main\" spacing={2} justify=\"center\">\n                    <CssBaseline />\n                    <TableContainer component={Paper}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell className={classes.tabaleHeader} align=\"left\">ミーティング名</TableCell>\n                                    <TableCell className={classes.tabaleHeader} align=\"left\">開始時間</TableCell>\n                                    <TableCell className={classes.tabaleHeader} align=\"left\">操作</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {videoMeetings && videoMeetings.map(videoMeeting => (\n                                    <TableRow key={videoMeeting.ID}>\n                                        <TableCell align=\"left\" className={classes.tableBody}><a href={videoMeeting.join_url}>{videoMeeting.topic}</a></TableCell>\n                                        <TableCell align=\"left\" className={classes.tableBody}>{videoMeeting.start_time}</TableCell>\n                                        <TableCell align=\"left\" className={classes.tableBody}><Button color=\"secondary\" variant=\"contained\" onClick={() => deleteHandler(videoMeeting.ID)}>削除</Button></TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>\n        </>\n    )\n}\n\nexport default VideoMeetings","import firebase from 'firebase/app'\nimport \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n})\n\nexport const db = firebase.firestore()\n\n\nconst  timestampToDateRecursively = (value: any): any =>{\n  if (value == null) {\n    return value;\n  } else if (value.constructor === firebase.firestore.Timestamp) {\n    return value.toDate();\n  } else if (Array.isArray(value)) {\n    return value.map(timestampToDateRecursively);\n  } else if (value.constructor === Object) {\n    const converted: any = {};\n    for (const key in value) {\n      converted[key] = timestampToDateRecursively(value[key]);\n    }\n    return converted;\n  } else {\n    return value;\n  }\n}\n\nexport const wrapDocumentSnapshotData = () => {\n  console.log(`Wrapping DocumentSnapshot.data()`);\n  const origin = firebase.firestore.DocumentSnapshot.prototype.data;\n  firebase.firestore.DocumentSnapshot.prototype.data = function () {\n    const data = origin.bind(this)();\n    const converted = timestampToDateRecursively(data);\n    return converted;\n  };\n}\n","export const threads = [{\n    id: \"\",\n    transactionId: 0,\n    title: \"\",\n    description: \"\",\n    createdAt: new Date(),\n    updatedAt: new Date(),\n}]\n\nexport const thread = {\n    id: \"\",\n    transactionId: 0,\n    title: \"\",\n    description: \"\",\n    createdAt: new Date(),\n    updatedAt: new Date(),\n}\n","export const existMessages = [{\n    id: \"\",\n    threadId: \"\",\n    userId: 0,\n    iconUrl: \"\",\n    message: \"\",\n    createdAt: new Date(),\n    updatedAt: new Date(),\n}]\n\nexport const existMessage = {\n    id: \"\",\n    threadId: \"\",\n    userId: 0,\n    iconUrl: \"\",\n    message: \"\",\n    createdAt: new Date(),\n    updatedAt: new Date(),\n}\n\nexport const message = {\n    threadId: \"\",\n    userId: 0,\n    iconUrl: \"\",\n    message: \"\",\n    createdAt: new Date(),\n    updatedAt: new Date(),\n}\n\n","import { thread, threads } from './threadState'\nimport { existMessages, existMessage, message} from './messageState'\n\nexport const threadsState = threads\nexport const threadState = thread\nexport const existMessageState = existMessage\nexport const existMessagesState = existMessages\nexport const messageState = message","import React, { useState, useEffect } from 'react'\nimport { db } from \"../firebase\"\nimport { Grid, CssBaseline, Button, Table, TableHead, TableRow, TableCell, TableContainer, TableBody, Paper, CardContent, Card, Typography} from '@material-ui/core'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { useHistory } from 'react-router-dom';\n\n\nimport { threadsState } from '../store/index'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    tabaleHeader: {\n        fontSize: '13px',\n        color: 'rgba(0,16,14,0.55)',\n    },\n    tableBody: {\n        fontSize: '13px',\n    },\n    container: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n    moveThread: {\n        fontSize: '13px',\n        '&:hover': {\n\t        background: 'rgba(0,16,14,0.06)'\n         },\n    }\n}))\n\nconst ThreadLists: React.FC<{transactionId: number}> = ({transactionId}) => {\n    type thread = typeof threadsState[0]\n    const [threads, setThreads] = useState(threadsState)\n    const classes = useStyles()\n    const history = useHistory()\n\n    useEffect(() => {\n        const unSub = db.collection(\"threads\").where('transactionId', '==', transactionId).onSnapshot((snapshot) => {\n            setThreads(\n                snapshot.docs.map((doc) =>({\n                    id: doc.id,\n                    transactionId: doc.data().transactionId,\n                    title: doc.data().title,\n                    description: doc.data().description,\n                    createdAt: doc.data().createdAt,\n                    updatedAt: doc.data().updatedAt,\n                })))\n        })\n        console.log(threads)\n        return () => {\n            unSub()\n        }\n    }, [])\n\n    const editThread = (thread: thread) => {\n        history.push({\n            pathname: '/mypage/chat/thread/edit',\n            state: {thread}\n        })\n    }\n\n    const moveThread = (threadId: string) => {\n        history.push({\n            pathname: '/mypage/chat/thread',\n            state: {threadId}\n        })\n    }\n\n    return (\n        <>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>スレッド一覧</Typography>\n            <Grid item xs={12}>\n                <Card  className={classes.container} variant=\"outlined\">\n                    <CardContent>\n                        <Grid container component=\"main\" spacing={2} justify=\"center\">\n                        <CssBaseline />\n                        <TableContainer component={Paper}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell className={classes.tabaleHeader} style={{ minWidth: 100 }} align=\"left\">タイトル</TableCell>\n                                        <TableCell className={classes.tabaleHeader} style={{ minWidth: 200 }} align=\"left\">詳細</TableCell>\n                                        <TableCell className={classes.tabaleHeader} style={{ minWidth: 40 }} align=\"left\">操作</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {threads && threads.map(thread => (\n                                        <TableRow key={thread.id}>\n                                            <TableCell align=\"left\" className={classes.tableBody} style={{ minWidth: 100 }}>{thread.title}</TableCell>\n                                            <TableCell align=\"left\" className={classes.tableBody} style={{ minWidth: 200 }}>{thread.description}</TableCell>\n                                            <TableCell align=\"left\" className={classes.tableBody} style={{ minWidth: 40 }}>\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={6}><Grid container justify=\"flex-end\"><Button color=\"primary\" variant=\"contained\" onClick={() => editThread(thread)}>編集</Button></Grid></Grid>\n                                                    <Grid item xs={6}><Grid container justify=\"flex-start\"><Button  variant=\"contained\" onClick={() => moveThread(thread.id)}>詳細</Button></Grid></Grid>\n                                                </Grid>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </>\n    )\n}\n\nexport default ThreadLists","import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Grid } from \"@material-ui/core\"\n\nimport { threadState } from '../store/index'\nimport { db } from '../firebase'\nimport styles from './createThread.module.css'\n\n\nconst ThreacNew: React.FC<{transactionId: number}> = ({transactionId}) => {\n    const [thread, setThread] = useState(threadState)\n\n    useEffect(() => {\n        setThread(Object.assign(thread, {transactionId}))\n    }, [])\n\n    const setValue = (obj: object) => {\n        setThread(Object.assign(thread, obj))\n      }\n\n      const onSubmit = async () => {\n        setThread(Object.assign(thread, {createdAt: new Date()}))\n        db.collection(\"threads\").add(thread)\n      }\n\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <p className={styles.title}>新規スレッド作成</p>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"title\"\n                    label=\"title\"\n                    onChange={e => setValue({title: e.target.value})}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth\n                    id=\"description\"\n                    label=\"description\"\n                    onChange={e => setValue({description: e.target.value})}\n                />\n                <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onSubmit}\n                >\n                    スレッドを作成する\n                </Button>\n            </Grid>\n        </>\n    )\n}\n\nexport default ThreacNew","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal , Grid, Typography} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport ThreadLists from './components/threadLists'\nimport ThreadNew from './components/createThread'\n\nconst rand = () => {\n    return Math.round(Math.random() * 20) - 10;\n  }\n\nconst getModalStyle = () => {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    title: {\n        fontSize: '14px',\n        paddingRight: '5px',\n        fontWeight: 'bold'\n    }\n  }));\n\nconst Chat: React.FC<{transactionId: number}> = ({transactionId}) => {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    return (\n        <div>\n          <ThreadLists transactionId={transactionId}/>\n          <Grid container justify=\"flex-end\" alignItems=\"center\">\n            <Typography className={classes.title}>スレッド追加</Typography>\n            <AddCircleIcon color=\"primary\" onClick={handleOpen}/>\n          </Grid>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n             <div style={modalStyle} className={classes.paper}>\n                <ThreadNew transactionId={transactionId} />\n            </div>\n          </Modal>\n        </div>\n      );\n}\n\nexport default Chat","import React, {useState} from 'react'\nimport { useLocation } from 'react-router-dom'\nimport {Grid, CssBaseline, Card, CardContent, Typography } from '@material-ui/core'\nimport {makeStyles, Theme } from \"@material-ui/core/styles\";\n\n\nimport CreateReview from '../review/new'\nimport Review from '../review/index'\nimport Status from './status'\nimport { transactionState } from '../index/store'\nimport Cookies from 'js-cookie'\nimport VideoMeetings from '../videMeeting/index'\nimport Chat from '../../../chat'\n\ntype transaction = {transaction: typeof transactionState[0]}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        justifyContent: 'center'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n    label: {\n        fontWeight:'bold',\n    },\n    data: {}\n    ,\n    container: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nconst Transaction: React.FC = () => {\n    const classes = useStyles()\n    const location = useLocation<transaction>();\n    const [transaction, setTransaction] = useState(location.state.transaction)\n\n    const existOwnReview = () => {\n        const userId = Cookies.get('bd-uid')\n        if(userId){\n            const reviews = transaction.reviews.filter(review => review.userId === parseInt(userId, 10))\n            return reviews.length > 0 ? true : false\n        }\n        return false\n    }\n\n\n    return (\n        <>\n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid item xs={10}>\n                    <Typography variant=\"h6\" component=\"h2\" className={classes.title}>案件詳細</Typography>\n                    <Grid item xs={12}>\n                        <Card  className={classes.container} variant=\"outlined\">\n                            <CardContent>\n                                <Grid container spacing={2} alignItems=\"center\">\n                                    <Grid item xs={4} className={classes.label}>\n                                        タイトル\n                                    </Grid>\n                                    <Grid item xs={8} className={classes.data}>\n                                        {transaction.Bizpack.title}\n                                    </Grid>\n                                    <Grid item xs={4} className={classes.label}>\n                                        カテゴリ\n                                    </Grid>\n                                    <Grid item xs={8} className={classes.data}>\n                                        {transaction.Bizpack.category.type}\n                                    </Grid>\n                                    <Grid item xs={4} className={classes.label}>\n                                        詳細\n                                    </Grid>\n                                    <Grid item xs={8} className={classes.data}>\n                                        {transaction.Bizpack.description}\n                                    </Grid>\n                                    <Status transaction={transaction} setTransaction={setTransaction}/>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                        {transaction.status === 6 && !existOwnReview() && transaction.reviews.length < 1 && (\n                            <CreateReview transaction={transaction} />\n                        )}\n                    </Grid>\n                </Grid>\n                <Grid item xs={10}>\n                    { transaction.reviews.length > 0 && (\n                        <Grid item xs={12} className={classes.data}>\n                            {transaction.reviews && (<Review transaction={transaction}/>)}\n                        </Grid>\n                    )}\n                </Grid>\n                <Grid item xs={10}>\n                    {transaction.videoMeetings.length > 0 && (\n                        <Grid item xs={12} >\n                        <VideoMeetings transactionId={transaction.ID}/>\n                        </Grid>\n                    )}\n                </Grid>\n                <Grid item xs={10}>\n                    <Grid item xs={12} >\n                        <Chat transactionId={transaction.ID}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Transaction","const issueState = {\n    userId: 0,\n    title: \"\",\n    background: \"\",\n    description: \"\",\n    categoryId: 0,\n    desiredSpecialist: \"\",\n    requiredItem: \"\",\n    clientInfo: \"\",\n    budget: 0,\n    recruitmentCapacity: 0,\n    startAt: \"\",\n    endAt: \"\",\n    applicationDeadline: \"\"\n}\n\nexport default issueState\n","import React, { useState, useEffect } from 'react'\nimport Cookies from 'js-cookie'\nimport {Grid, CssBaseline, TextField, FormControl, Select, MenuItem, InputLabel, Button, Typography, Card} from '@material-ui/core'\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { post, apiUrl } from '../../../../../libs/fetch'\nimport issueState from './store'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      margin: theme.spacing(1, 2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n    },\n    formControl: {\n        margin: theme.spacing(2, 0),\n        minWidth: 120,\n    },\n    textField: {\n        margin:  theme.spacing(1, 0),\n    },\n    dateField: {\n        margin:  theme.spacing(1, 0),\n        width: '60%'\n    },\n    label: {\n        fontSize: '2px'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n    container: {\n        width: '100%',\n        margin: '20px'\n    },\n    buttonContainer: {\n        margin: '20px',\n    }\n  }));\n\nconst userId = Number(Cookies.get('bd-uid'))\nissueState.userId = userId\n\n// TODO validation作成（開始時間や終了時間、募集期間の関係等）\nconst IssueNew: React.FC = () => {\n    console.log('hogheogeogheoghoe')\n    const classes = useStyles();\n    const [issue, setIssue] = useState(issueState)\n\n    const handleChangeTitle = (title: string) => {\n        setIssue({...issue, title: title})\n    }\n\n    const handleChangeBackground = (background: string) => {\n        setIssue({...issue, background: background})\n    }\n\n    const handleChangeDescription = (description: string) => {\n        setIssue({...issue, description: description})\n    }\n\n    const handleChangeCategoryId = (categoryId: any) => {\n        if(typeof categoryId === 'number'){\n            setIssue({...issue, categoryId: categoryId})\n        }\n    }\n    const categoryTypes = [\n        {id: 1, name: \"選定\"},\n        {id: 2, name: \"導入\"},\n        {id: 3, name: \"運用\"},\n    ]\n\n    const handleChangeDesiredSpecialist = (desiredSpecialist: string) => {\n        setIssue({...issue, desiredSpecialist: desiredSpecialist})\n    }\n\n    const handleChangeRequiredItem = (requiredItem: string) => {\n        setIssue({...issue, requiredItem: requiredItem})\n    }\n\n    const handleChangeClientInfo = (clientInfo: string) => {\n        setIssue({...issue, clientInfo: clientInfo})\n    }\n\n    const handleChangeBudget = (budget: any) => {\n        setIssue({...issue, budget: parseInt(budget, 10)})\n    }\n\n    const handleChangeRecruitmentCapacity = (recruitmentCapacity: any) => {\n        setIssue({...issue, recruitmentCapacity: parseInt(recruitmentCapacity, 10)})\n    }\n\n    const handleChangeStartAt = (startAt: any) => {\n        if(typeof startAt === 'string'){\n            setIssue({...issue, startAt: startAt})\n        }\n    }\n\n    const handleChangeEndAt = (endAt: string) => {\n        if(typeof endAt === 'string'){\n            setIssue({...issue, endAt: endAt})\n        }\n    }\n\n    const handleChangeApplicationDeadline = (applicationDeadline: string) => {\n        if(typeof applicationDeadline === 'string'){\n            setIssue({...issue, applicationDeadline: applicationDeadline})\n        }\n    }\n\n    const asyncCreateIssue = async () => {\n        if(issue.userId === 0) alert('ログインしなおしてください')\n        post(`${apiUrl}/mypage/issue/create`, issue, {}, true)\n              .then(res => res.json())\n              .then(json => console.log(json))\n    }\n\n    useEffect(() => {\n        const userId = Cookies.get('bd-uid')\n        if(userId) {\n            setIssue({...issue, userId: parseInt(userId, 10)})\n        }\n    }, [])\n    // const { register, errors } = useForm({\n    //     mode: 'onBlur',\n    //     reValidateMode: 'onChange'\n    // })\n\n    return (\n        <Grid container component=\"main\" alignItems=\"center\" justify=\"center\">\n            <CssBaseline />\n\n            <Grid item xs={12} sm={7} md={5} >\n                <Typography variant=\"h6\" component=\"h2\" className={classes.title}>公募作成</Typography>\n                <Card variant=\"outlined\">\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={10} sm={10} md={10} className={classes.container} >\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"title\"\n                            label=\"タイトル\"\n                            name=\"title\"\n                            autoComplete=\"title\"\n                            autoFocus\n                            className={classes.label}\n                            onChange={(e)=> handleChangeTitle(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.title)}\n                            // helperText={errors.title && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"background\"\n                            label=\"依頼背景\"\n                            name=\"background\"\n                            autoComplete=\"background\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.background}\n                            onChange={(e)=> handleChangeBackground(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.background)}\n                            // helperText={errors.background && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"description\"\n                            label=\"依頼詳細\"\n                            name=\"description\"\n                            autoComplete=\"description\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.description}\n                            onChange={(e)=> handleChangeDescription(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.description)}\n                            // helperText={errors.description && \"入力必須です\"}\n                        />\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"category\">カテゴリー</InputLabel>\n                            <Select\n                                labelId=\"category\"\n                                value={issue.categoryId}\n                                onChange={(e)=> handleChangeCategoryId(e.target.value)}\n                                label=\"カテゴリー\"\n                            >\n                                {categoryTypes.map(categoryType => {\n                                    return (<MenuItem value={categoryType.id}>{categoryType.name}</MenuItem>)\n                                })}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"desiredSpecialist\"\n                            label=\"想定するスペシャリスト\"\n                            name=\"desiredSpecialist\"\n                            autoComplete=\"desiredSpecialist\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.desiredSpecialist}\n                            onChange={(e)=> handleChangeDesiredSpecialist(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.desiredSpecialist)}\n                            // helperText={errors.desiredSpecialist && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"requiredItem\"\n                            label=\"提案時に記入してほしいこと\"\n                            name=\"requiredItem\"\n                            autoComplete=\"requiredItem\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.requiredItem}\n                            onChange={(e)=> handleChangeRequiredItem(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.requiredItem)}\n                            // helperText={errors.requiredItem && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"clientInfo\"\n                            label=\"依頼者情報\"\n                            name=\"clientInfo\"\n                            autoComplete=\"clientInfo\"\n                            autoFocus\n                            multiline\n                            rows={2}\n                            value={issue.clientInfo}\n                            onChange={(e)=> handleChangeClientInfo(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.clientInfo)}\n                            // helperText={errors.clientInfo && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            type=\"number\"\n                            id=\"budget\"\n                            label=\"予算(円)\"\n                            name=\"budget\"\n                            autoComplete=\"budget\"\n                            autoFocus\n                            value={issue.budget}\n                            onChange={(e)=> handleChangeBudget(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.budget)}\n                            // helperText={errors.budget && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            type=\"number\"\n                            id=\"recruitmentCapacity\"\n                            label=\"募集人数\"\n                            name=\"recruitmentCapacity\"\n                            autoComplete=\"recruitmentCapacity\"\n                            autoFocus\n                            value={issue.recruitmentCapacity}\n                            onChange={(e)=> handleChangeRecruitmentCapacity(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.recruitmentCapacity)}\n                            // helperText={errors.recruitmentCapacity && \"入力必須です\"}\n                        />\n                        <TextField\n                            id=\"startAt\"\n                            name=\"startAt\"\n                            type=\"date\"\n                            label=\"開始時期\"\n                            // fullWidth\n                            className={classes.dateField}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=> handleChangeStartAt(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.startAt)}\n                            // helperText={errors.startAt && \"入力必須です\"}\n                        />\n                        <TextField\n                            id=\"endAt\"\n                            name=\"endAt\"\n                            type=\"date\"\n                            label=\"終了時期\"\n                            // fullWidth\n                            className={classes.dateField}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=> handleChangeEndAt(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.endAt)}\n                            // helperText={errors.endAt && \"入力必須です\"}\n                        />\n                        <TextField\n                            id=\"applicationDeadline\"\n                            name=\"applicationDeadline\"\n                            type=\"date\"\n                            label=\"募集期限\"\n                            // fullWidth\n                            className={classes.dateField}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=> handleChangeApplicationDeadline(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.applicationDeadline)}\n                            // helperText={errors.applicationDeadline && \"入力必須です\"}\n                        />\n                        <Grid className={classes.buttonContainer}>\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                // disabled={btnDisabler}\n                                onClick={()=>asyncCreateIssue()}\n                            >\n                            公募を作成する\n                            </Button>\n                        </Grid>\n                    </form>\n                    </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n\n\n\n\n}\n\nexport default IssueNew\n","export const issueState = {\n    ID: 0,\n    userId: 0,\n    title: \"\",\n    background: \"\",\n    description: \"\",\n    categoryId: 1,\n    desiredSpecialist: \"\",\n    requiredItem: \"\",\n    clientInfo: \"\",\n    budget: 0,\n    recruitmentCapacity: 0,\n    startAt: \"2020-12-27T10:31:04.447893+09:00\",\n    endAt: \"2020-12-27T10:31:04.447893+09:00\",\n    applicationDeadline: \"2020-12-27T10:31:04.447893+09:00\"\n}\n\n\nexport const tableDataState = {\n    id: 0,\n    category: \"\",\n    title: \"title\",\n    description: \"\",\n    budget: 0,\n    startAt: \"2020-12-27T10:31:04.447893+09:00\",\n    applicationDeadline: \"2020-12-27T10:31:04.447893+09:00\",\n    issue: issueState\n}","import React, { useEffect, useState }  from 'react'\nimport { Paper,Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Button, Menu, MenuItem , Modal, TextField} from '@material-ui/core';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useHistory } from 'react-router-dom';\nimport {format} from 'date-fns'\n\nimport { issueState, tableDataState } from './store'\nimport { get, apiUrl } from '../../../../../libs/fetch'\n\n\ninterface Column {\n    id: 'category' | 'title' | 'description' | 'budget' | 'startAt' | 'applicationDeadline' | 'other';\n    label: string;\n    minWidth?: number;\n    align?: 'right';\n    format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n    { id: 'category', label: 'カテゴリー', minWidth: 170 },\n    { id: 'title', label: 'タイトル', minWidth: 170 },\n    { id: 'description', label: '詳細', minWidth: 300 },\n    { id: 'budget', label: '予算', minWidth: 170 },\n    { id: 'startAt', label: '開始時期', minWidth: 170 },\n    { id: 'applicationDeadline', label: '応募期限', minWidth: 170},\n    { id: 'other', label: 'その他', minWidth: 50}\n];\n\nconst IssueIndex: React.FC = () => {\n    const history = useHistory()\n    const useStyles = makeStyles((theme: Theme) => ({\n        root: {\n          width: '100%',\n        },\n        container: {\n          maxHeight: 440,\n        },\n        tabaleHeader: {\n            fontSize: '13px',\n            color: 'rgba(0,16,14,0.55)',\n        },\n        tableBody: {\n            fontSize: '13px',\n        },\n        moreMenue: {\n            fontSize: '13px',\n            fontWeight: 'bold',\n            padding: '10px 20px'\n        }\n      }));\n    const classes = useStyles();\n    const categoryTypes = [\n        {id: 1, name: \"選定\"},\n        {id: 2, name: \"導入\"},\n        {id: 3, name: \"運用\"},\n    ]\n\n    // transaction data\n    type resIssue = typeof issueState\n    type tableData = typeof tableDataState[]\n    const [tableData, setTableData] = useState([tableDataState])\n\n    const asyncGetIssues = async () => {\n        get(`${apiUrl}/mypage/issue/`, {}, true)\n              .then(res => res.json())\n              .then(json => {\n                setTableData(createTableData(json.data))\n              })\n    }\n\n    const createTableData = (issues: resIssue[]) => {\n        const result =  issues.map(issue => {\n            const category = (categoryTypes.filter(category => category.id === issue.categoryId))[0]\n            return {\n                id: issue.ID,\n                category: category.name,\n                title: issue.title,\n                description: issue.description,\n                budget: issue.budget,\n                startAt: format(new Date(issue.startAt), 'yyyy/MM/dd'),\n                applicationDeadline: format(new Date(issue.applicationDeadline), 'yyyy/MM/dd'),\n                issue: issue\n            }\n        })\n        return result\n    }\n\n    const demoData = [issueState, issueState, issueState]\n    useEffect(() => {\n        asyncGetIssues()\n        // const hoge = createTableData(demoData)\n        // setTableData(hoge)\n    },[])\n\n    // pagenation\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n\n    // moreMenue\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const moveIssue = (issue: resIssue) => {\n        history.push({\n            pathname: '/mypage/client/issue',\n            state: {issue}\n        })\n    }\n\n\n    // accept button\n    const dummy = () => {}\n\n    return (\n        <>\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                        {columns.map((column) => (\n                            <TableCell\n                            key={column.id}\n                            align={column.align}\n                            style={{ minWidth: column.minWidth }}\n                            className={classes.tabaleHeader}\n                            >\n                            {column.label}\n                            </TableCell>\n                        ))\n                        }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                        return (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                            {columns.map((column) => {\n                                let value : string | number | JSX.Element[] | JSX.Element\n                                if(column.id === 'other'){\n                                    return (\n                                        <TableCell>\n                                            <Button data-issue={JSON.stringify(row.issue)} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                                                <MoreVertIcon />\n                                            </Button>\n                                            <Menu\n                                                id=\"simple-menu\"\n                                                anchorEl={anchorEl}\n                                                keepMounted\n                                                open={Boolean(anchorEl)}\n                                                onClose={handleClose}\n                                            >\n                                                <MenuItem\n                                                    className={classes.moreMenue}\n                                                    onClick={() => {\n                                                        const data = anchorEl? anchorEl.dataset.issue : ''\n                                                        if(data){\n                                                            const issue = JSON.parse(data)\n                                                            moveIssue(issue)\n                                                        }}\n                                                }>詳細</MenuItem>\n                                            </Menu>\n                                        </TableCell>\n                                    )\n                                } else {\n                                    value = row[column.id]\n                                    return (\n                                    <TableCell key={column.id} align={column.align} className={classes.tableBody}>\n                                        {value}\n                                    </TableCell>\n                                    );\n                                }\n                            })}\n                            </TableRow>\n                        );\n                        })}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 50,100]}\n                    component=\"div\"\n                    count={tableData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </>\n      );\n}\n\nexport default IssueIndex\n\n","import React, {useState} from 'react'\nimport { useLocation } from 'react-router-dom'\nimport {Grid, CssBaseline, Button, Typography, Card, CardContent } from '@material-ui/core'\nimport {makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {format} from 'date-fns'\nimport { useHistory } from 'react-router-dom';\n\n\nimport { destroy, apiUrl } from '../../../../../libs/fetch'\nimport issueState from './store'\n\ntype issueState = {issue: typeof issueState}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    label: {\n        fontWeight:'bold'\n    },\n    data: {}\n    ,\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n    container: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    buttonWrapper: {\n        margin: '2px',\n        padding: '2px'\n    },\n    button: {\n        fontSize: '12px',\n        margin: '10px'\n    }\n}))\n\nconst Issue: React.FC = () => {\n    const history = useHistory()\n    const classes = useStyles()\n    const location = useLocation<issueState>();\n    const [issue, setIssue] = useState(location.state.issue)\n    const categoryTypes = [\n        {id: 1, name: \"選定\"},\n        {id: 2, name: \"導入\"},\n        {id: 3, name: \"運用\"},\n    ]\n    const category = (categoryTypes.filter(category => category.id === issue.categoryId))[0]\n\n    const moveEditIssue = () => {\n        history.push({\n            pathname: '/mypage/client/issue/edit',\n            state: {issue}\n        })\n\n    }\n\n    const deleteIssue = async () => {\n        destroy(`${apiUrl}/mypage/issue/${issue.ID}/delete`, issue, true)\n              .then(res => res.json())\n              .then(json => {\n                if(json) { history.push('/mypage/client/issue/index') }\n              })\n    }\n\n\n    return (\n        <>\n            <Grid container component=\"main\" spacing={2}>\n                <CssBaseline />\n                    <Grid container alignItems=\"center\">\n\n                    <Grid item xs={6}>\n                        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>公募詳細</Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.buttonWrapper}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={()=>moveEditIssue()}\n                                className={classes.button}\n                            >\n                                編集する\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                // disabled={btnDisabler}\n                                onClick={()=>deleteIssue()}\n                                className={classes.button}\n                            >\n                                削除する\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    </Grid>\n                    <Card  className={classes.container} variant=\"outlined\">\n                    <CardContent>\n                    <Grid container spacing={2} alignItems=\"center\">\n                        <Grid item xs={4} className={classes.label}>\n                        タイトル\n                            </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.title}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            依頼背景\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.background}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            依頼詳細\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.description}\n                        </Grid>\n\n                        <Grid item xs={4} className={classes.label}>\n                            カテゴリー\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {category.name}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            想定するスペシャリスト\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.desiredSpecialist}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            提案時に記入してほしいこと\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.requiredItem}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            依頼者情報\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.clientInfo}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            予算(円)\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.budget}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            募集人数\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {issue.recruitmentCapacity}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            開始時期\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {format(new Date(issue.startAt), 'yyyy/MM/dd')}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            終了時期\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {format(new Date(issue.endAt), 'yyyy/MM/dd')}\n                        </Grid>\n                        <Grid item xs={4} className={classes.label}>\n                            募集期限\n                        </Grid>\n                        <Grid item xs={8} className={classes.data}>\n                            {format(new Date(issue.applicationDeadline), 'yyyy/MM/dd')}\n                        </Grid>\n                    </Grid>\n                    </CardContent>\n                    </Card>\n            </Grid>\n        </>\n    )\n}\n\nexport default Issue\n","import React, { useState } from 'react'\nimport {Grid, CssBaseline, TextField, FormControl, Select, MenuItem, InputLabel, Button, Typography, Card} from '@material-ui/core'\nimport { useForm } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useLocation } from 'react-router-dom'\nimport {format} from 'date-fns'\n\nimport editIssueState from './store'\nimport { put, apiUrl } from '../../../../../libs/fetch'\n\ntype editIssueState = {issue: typeof editIssueState}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      margin: theme.spacing(1, 2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(2, 0),\n        minWidth: 120,\n    },\n    textField: {\n        margin:  theme.spacing(1, 0),\n    },\n    dateField: {\n        margin:  theme.spacing(1, 0),\n        width: '60%'\n    },\n    label: {\n        fontSize: '2px'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n    container: {\n        width: '100%',\n        margin: '20px'\n    },\n    buttonContainer: {\n        margin: '20px',\n    }\n  }));\n\n  // TODO validation作成（開始時間や終了時間、募集期間の関係等）\nconst EditIssue: React.FC = () => {\n    const classes = useStyles();\n    const location = useLocation<editIssueState>();\n    const [issue, setIssue] = useState(location.state.issue)\n\n    const handleChangeTitle = (title: string) => {\n        setIssue({...issue, title: title})\n    }\n\n    const handleChangeBackground = (background: string) => {\n        setIssue({...issue, background: background})\n    }\n\n    const handleChangeDescription = (description: string) => {\n        setIssue({...issue, description: description})\n    }\n\n    const handleChangeCategoryId = (categoryId: any) => {\n        if(typeof categoryId === 'number'){\n            setIssue({...issue, categoryId: categoryId})\n        }\n    }\n    const categoryTypes = [\n        {id: 1, name: \"選定\"},\n        {id: 2, name: \"導入\"},\n        {id: 3, name: \"運用\"},\n    ]\n\n    const handleChangeDesiredSpecialist = (desiredSpecialist: string) => {\n        setIssue({...issue, desiredSpecialist: desiredSpecialist})\n    }\n\n    const handleChangeRequiredItem = (requiredItem: string) => {\n        setIssue({...issue, requiredItem: requiredItem})\n    }\n\n    const handleChangeClientInfo = (clientInfo: string) => {\n        setIssue({...issue, clientInfo: clientInfo})\n    }\n\n    const handleChangeBudget = (budget: any) => {\n        setIssue({...issue, budget: parseInt(budget, 10)})\n    }\n\n    const handleChangeRecruitmentCapacity = (recruitmentCapacity: any) => {\n        setIssue({...issue, recruitmentCapacity: parseInt(recruitmentCapacity, 10)})\n    }\n\n    const handleChangeStartAt = (startAt: any) => {\n        if(typeof startAt === 'string'){\n            setIssue({...issue, startAt: startAt})\n        }\n    }\n\n    const handleChangeEndAt = (endAt: string) => {\n        if(typeof endAt === 'string'){\n            setIssue({...issue, endAt: endAt})\n        }\n    }\n\n    const handleChangeApplicationDeadline = (applicationDeadline: string) => {\n        if(typeof applicationDeadline === 'string'){\n            setIssue({...issue, applicationDeadline: applicationDeadline})\n        }\n    }\n\n    const asyncUpdateIssue = async () => {\n        put(`${apiUrl}/mypage/issue/${issue.ID}/update`, issue, {}, true)\n              .then(res => res.json())\n              .then(json => console.log(json))\n    }\n    // const { register, errors } = useForm({\n    //     mode: 'onBlur',\n    //     reValidateMode: 'onChange'\n    // })\n\n    return (\n        <Grid container component=\"main\" alignItems=\"center\" justify=\"center\">\n            <CssBaseline />\n\n            <Grid item xs={7} sm={7} md={7} >\n                <Typography variant=\"h6\" component=\"h2\" className={classes.title}>公募更新</Typography>\n                <Card variant=\"outlined\">\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                    <Grid item xs={10} sm={10} md={10} className={classes.container} >\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"title\"\n                            label=\"タイトル\"\n                            name=\"title\"\n                            autoComplete=\"title\"\n                            autoFocus\n                            value={issue.title}\n                            onChange={(e)=> handleChangeTitle(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.title)}\n                            // helperText={errors.title && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"background\"\n                            label=\"依頼背景\"\n                            name=\"background\"\n                            autoComplete=\"background\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.background}\n                            onChange={(e)=> handleChangeBackground(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.background)}\n                            // helperText={errors.background && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"description\"\n                            label=\"依頼詳細\"\n                            name=\"description\"\n                            autoComplete=\"description\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.description}\n                            onChange={(e)=> handleChangeDescription(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.description)}\n                            // helperText={errors.description && \"入力必須です\"}\n                        />\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"category\">カテゴリー</InputLabel>\n                            <Select\n                                labelId=\"category\"\n                                value={issue.categoryId}\n                                onChange={(e)=> handleChangeCategoryId(e.target.value)}\n                                label=\"カテゴリー\"\n                            >\n                                {categoryTypes.map(categoryType => {\n                                    return (<MenuItem value={categoryType.id}>{categoryType.name}</MenuItem>)\n                                })}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"desiredSpecialist\"\n                            label=\"想定するスペシャリスト\"\n                            name=\"desiredSpecialist\"\n                            autoComplete=\"desiredSpecialist\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.desiredSpecialist}\n                            onChange={(e)=> handleChangeDesiredSpecialist(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.desiredSpecialist)}\n                            // helperText={errors.desiredSpecialist && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"requiredItem\"\n                            label=\"提案時に記入してほしいこと\"\n                            name=\"requiredItem\"\n                            autoComplete=\"requiredItem\"\n                            autoFocus\n                            multiline\n                            rows={4}\n                            value={issue.requiredItem}\n                            onChange={(e)=> handleChangeRequiredItem(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.requiredItem)}\n                            // helperText={errors.requiredItem && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            id=\"clientInfo\"\n                            label=\"依頼者情報\"\n                            name=\"clientInfo\"\n                            autoComplete=\"clientInfo\"\n                            autoFocus\n                            multiline\n                            rows={2}\n                            value={issue.clientInfo}\n                            onChange={(e)=> handleChangeClientInfo(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.clientInfo)}\n                            // helperText={errors.clientInfo && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            type=\"number\"\n                            id=\"budget\"\n                            label=\"予算(円)\"\n                            name=\"budget\"\n                            autoComplete=\"budget\"\n                            autoFocus\n                            value={issue.budget}\n                            onChange={(e)=> handleChangeBudget(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.budget)}\n                            // helperText={errors.budget && \"入力必須です\"}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            required\n                            type=\"number\"\n                            id=\"recruitmentCapacity\"\n                            label=\"募集人数\"\n                            name=\"recruitmentCapacity\"\n                            autoComplete=\"recruitmentCapacity\"\n                            autoFocus\n                            value={issue.recruitmentCapacity}\n                            onChange={(e)=> handleChangeRecruitmentCapacity(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.recruitmentCapacity)}\n                            // helperText={errors.recruitmentCapacity && \"入力必須です\"}\n                        />\n                        <TextField\n                            id=\"startAt\"\n                            name=\"startAt\"\n                            type=\"date\"\n                            label=\"開始時期\"\n                            className={classes.dateField}\n                            defaultValue={format(new Date(issue.startAt), 'yyyy-MM-dd')}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=> handleChangeStartAt(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.startAt)}\n                            // helperText={errors.startAt && \"入力必須です\"}\n                        />\n                        <TextField\n                            id=\"endAt\"\n                            name=\"endAt\"\n                            type=\"date\"\n                            label=\"終了時期\"\n                            className={classes.dateField}\n                            defaultValue={format(new Date(issue.endAt), 'yyyy-MM-dd')}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=> handleChangeEndAt(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.endAt)}\n                            // helperText={errors.endAt && \"入力必須です\"}\n                        />\n                        <TextField\n                            id=\"applicationDeadline\"\n                            name=\"applicationDeadline\"\n                            type=\"date\"\n                            label=\"募集期限\"\n                            className={classes.dateField}\n                            defaultValue={format(new Date(issue.applicationDeadline), 'yyyy-MM-dd')}\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            onChange={(e)=> handleChangeApplicationDeadline(e.target.value)}\n                            // inputRef={register({ required: true })}\n                            // error={Boolean(errors.applicationDeadline)}\n                            // helperText={errors.applicationDeadline && \"入力必須です\"}\n                        />\n                       <Grid className={classes.buttonContainer}>\n                            <Button\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                // disabled={btnDisabler}\n                                onClick={()=>asyncUpdateIssue()}\n                            >\n                            公募を更新する\n                            </Button>\n                        </Grid>\n                        </form>\n                    </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        </Grid>\n    )\n\n\n\n\n}\n\nexport default EditIssue\n","import React from 'react'\nimport PrivateRoute from \"../../privateRoute\"\nimport IssueNew from '../../../pages/mypage/client/issue/new'\nimport IssueIndex from '../../../pages/mypage/client/issue/index'\nimport IssueShow from '../../../pages/mypage/client/issue/show'\nimport IssueEdit from '../../../pages/mypage/client/issue/edit'\nimport Mypage from '../../../layouts/mypage/client'\n\nconst IssueRoutes = [\n        <PrivateRoute exact path='/mypage/client/issue/new'>\n            <Mypage><IssueNew /></Mypage>\n        </PrivateRoute>,\n        <PrivateRoute exact path='/mypage/client/issue/index'>\n            <Mypage><IssueIndex /></Mypage>\n        </PrivateRoute>,\n        <PrivateRoute exact path='/mypage/client/issue/edit'>\n            <Mypage><IssueEdit /></Mypage>\n        </PrivateRoute>,\n        <PrivateRoute exact path='/mypage/client/issue'>\n            <Mypage><IssueShow /></Mypage>\n        </PrivateRoute>,\n]\n\nexport default IssueRoutes","const bizpackState = {\n  category: { type: 1 },\n  title: \"\",\n  products: [{name: \"sample\"}],\n  industry: \"\",\n  scale: 0,\n  description: \"\",\n  unitPrice: 0,\n  duration: 0,\n  isPublic: false\n}\n\nexport default bizpackState;","import React, { useState } from 'react'\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport bizpackState from './store'\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Grid, CssBaseline, TextField, Switch, FormControl, FormControlLabel, Button, Card, Typography} from \"@material-ui/core\"\nimport Layout from  '../../../../../layouts/mypage/specialist'\nimport { apiUrl, post } from '../../../../../libs/fetch';\nimport styles from './index.module.css'\n\nconst BizpackNew: React.FC = (_props) => {\n  const history = useHistory();\n  const [bizpack, setBizpack] = useState(bizpackState);\n\n  const { register, errors } = useForm({\n    mode: 'onBlur',\n    reValidateMode: 'onChange'\n  })\n\n  const btnDisabler = Boolean(errors.category) || Boolean(errors.title) || Boolean(errors.industry) || Boolean(errors.scale) || Boolean(errors.description) || Boolean(errors.unitPrice) || Boolean(errors.duration)\n\n  const setValue = (obj: object) => {\n    setBizpack(Object.assign(bizpack, obj))\n  }\n\n  // TODO: エラーハンドリング\n  const onSubmit = async () => {\n    const res = await post(`${apiUrl}/mypage/bizpacks`, bizpack, {}, true)\n                        .then(res => res.json())\n\n    if (res.status == 200) {\n      history.push(`/mypage/specialist/bizpacks`)\n    }\n  }\n\n  return (\n    <Layout>\n      <Grid container component=\"main\" >\n          <CssBaseline />\n          <Grid item xs={12} sm={7} md={5} >\n                <h1 className={styles.title} >bizpack作成</h1>\n                <Card variant=\"outlined\">\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                      <Grid item xs={10} sm={10} md={10} className={styles.container} >\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          id=\"category\"\n                          label=\"category\"\n                          name=\"category\"\n                          type=\"number\"\n                          autoComplete=\"category\"\n                          onChange={e => setValue({ category: { type: e.target.value } })}\n                          defaultValue={bizpack.category.type}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.category)}\n                          helperText={errors.category && \"入力必須です\"}\n                      />\n                      <ReactTagInput\n                          placeholder=\"input SaaS tools\"\n                          tags={bizpack.products.map(product => { return product.name })}\n                          onChange={(newTags) => setValue({ products: newTags.map(product => { return { name: product } }) })}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          id=\"industry\"\n                          label=\"industry\"\n                          name=\"industry\"\n                          autoComplete=\"industry\"\n                          autoFocus\n                          defaultValue={bizpack.industry}\n                          onChange={e => setValue({industry: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.industry)}\n                          helperText={errors.industry && \"入力必須です\"}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"scale\"\n                          label=\"scale\"\n                          name=\"scale\"\n                          autoComplete=\"scale\"\n                          autoFocus\n                          defaultValue={bizpack.scale}\n                          onChange={e => setValue({scale: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.scale)}\n                          helperText={errors.scale && \"入力必須です\"}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          id=\"title\"\n                          label=\"title\"\n                          name=\"title\"\n                          autoComplete=\"title\"\n                          autoFocus\n                          defaultValue={bizpack.title}\n                          onChange={e => setValue({title: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.title)}\n                          helperText={errors.title && \"入力必須です\"}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          id=\"description\"\n                          label=\"description\"\n                          name=\"description\"\n                          autoComplete=\"description\"\n                          autoFocus\n                          defaultValue={bizpack.description}\n                          onChange={e => setValue({description: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.description)}\n                          helperText={errors.description && \"入力必須です\"}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"unitPrice\"\n                          label=\"unitPrice\"\n                          name=\"unitPrice\"\n                          autoComplete=\"unitPrice\"\n                          autoFocus\n                          defaultValue={bizpack.unitPrice}\n                          onChange={e => setValue({unitPrice: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.unitPrice)}\n                          helperText={errors.unitPrice && \"入力必須です\"}\n                      />\n                      <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"duration\"\n                          label=\"duration\"\n                          name=\"duration\"\n                          autoComplete=\"duration\"\n                          autoFocus\n                          defaultValue={bizpack.duration}\n                          onChange={e => setValue({duration: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.duration)}\n                          helperText={errors.duration && \"入力必須です\"}\n                      />\n                      <FormControl component=\"label\">\n                      <FormControlLabel\n                          control={\n                            <Switch\n                              checked={bizpack.isPublic}\n                              onChange={() => setBizpack({ ...bizpack, isPublic: !bizpack.isPublic })}\n                            />\n                          }\n                          label={bizpack.isPublic ? \"公開\": \"下書き保存\"}\n                      />\n                      </FormControl>\n                      <Grid className={styles.buttonWrapper}>\n                        <Button\n                            fullWidth\n                            // type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={btnDisabler}\n                            onClick={onSubmit}\n                        >\n                            bizpackを作成する\n                        </Button>\n                      </Grid>\n                     </Grid>\n                  </Grid>\n                </Card>\n            </Grid>\n            </Grid>\n    </Layout>\n  )\n}\n\nexport default BizpackNew","const bizpacksState = () => {\n  return (\n    [\n      {\n        id: 0,\n        category: 1,\n        products: [{ name: \"\" }],\n        industry: \"\",\n        scale: 0,\n        title: \"\",\n        description: \"\",\n        unitPrice: 0,\n        duration: 0,\n        isPublic: false\n      }\n    ]\n  )\n}\n\nexport default bizpacksState;","import React, { useEffect, useState } from 'react'\nimport Layout from '../../../../../layouts/mypage/specialist';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Chip, Button, Menu, MenuItem, Grid } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport resGetBizpacksType from '../resGetBizpacks.json'\nimport bizpacksState from './store'\nimport { apiUrl, get, destroy } from '../../../../../libs/fetch';\nimport { nanoid } from 'nanoid'\nimport CategoryIcon from '../../../../../components/categoryIcon'\nimport styles from './index.module.css'\n\n\ntype bizpack = typeof resGetBizpacksType.data[0]\n\ninterface Column {\n  id: 'category' | 'title' | 'products' | 'industry' | 'scale' | 'description' | 'unitPrice' | 'duration' | 'isPublic' | 'other' ;\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n  { id: 'category', label: 'カテゴリー', minWidth: 170 },\n  { id: 'title', label: 'タイトル', minWidth: 170 },\n  { id: 'products', label: 'プロダクト', minWidth: 250 },\n  { id: 'industry', label: '業界', minWidth: 100 },\n  { id: 'scale', label: '規模', align: 'right', minWidth: 70 },\n  { id: 'description', label: '詳細', minWidth: 300 },\n  { id: 'unitPrice', label: '単価', align: 'right', minWidth: 70 },\n  { id: 'duration', label: '時間', align: 'right', minWidth: 70 },\n  { id: 'isPublic', label: 'ステータス', minWidth: 120 },\n  { id: 'other', label: 'その他', minWidth: 50}\n];\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n  tabaleHeader: {\n      fontSize: '13px',\n      color: 'rgba(0,16,14,0.55)',\n  },\n  categoryLabel: {\n      fontSize: '10px',\n  },\n  tableBody: {\n      fontSize: '13px',\n  },\n  moreMenue: {\n      fontSize: '13px',\n      fontWeight: 'bold',\n      padding: '10px 20px'\n  },\n  product: {\n    margin: '5px'\n  }\n}));\n\nconst BizPackIndex: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory()\n\n  // ページネーション設定\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const rowsPerPage = Number(event.target.value)\n    setRowsPerPage(rowsPerPage);\n    setPage(0);\n  };\n\n  // メニュー操作(material ui)\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const moveEditBizpack = (bizpackId: string) => {\n    setAnchorEl(null);\n    history.push(`/mypage/specialist/bizpacks/${bizpackId}/edit`)\n  };\n\n  const DeleteBizpack = async (bizpackId: string) => {\n    // bizpack削除\n    const res = await destroy(`${apiUrl}/mypage/bizpacks/${bizpackId}`)\n                        .then(result => result.json())\n\n    if (res.result) {\n      // bizpacksから該当のIDのオブジェクトを除く\n      const newBizpacks = bizpacks.filter(bizpack => bizpack.id != Number(bizpackId))\n      setBizpacks(newBizpacks)\n    }\n  }\n\n  // bizpackの取得, 設定\n  const [bizpacks, setBizpacks] = React.useState(bizpacksState);\n\n  useEffect(() => {\n    const createData = (bizpack: bizpack) => {\n      return {\n        id: bizpack.ID,\n        category: bizpack.category.type,\n        title: bizpack.title,\n        products: bizpack.products.map(p => { return { name: p.name } }),\n        industry: bizpack.industry,\n        scale: bizpack.scale,\n        description: bizpack.description,\n        unitPrice: bizpack.unitPrice,\n        duration: bizpack.duration,\n        isPublic: bizpack.isPublic\n      }\n    }\n\n    // fetch get で bizpackのリストを取得\n    const fetchBizpacks = async () => {\n      const res = await get(`${apiUrl}/mypage/bizpacks`)\n                          .then(result => result.json());\n      const bizpacks = res.data.map((bizpack: bizpack) => createData(bizpack));\n      setBizpacks(bizpacks);\n    };\n\n    fetchBizpacks();\n  }, [])\n\n  return (\n    // TODO 編集・削除モーダルがアイコンの横ではなくブラウザ左上に出る。\n    <Layout>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n                <TableRow >\n                {columns.map((column) => (\n                  <TableCell\n                    key={`key-${nanoid(8)}`}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                    className={classes.tabaleHeader}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {bizpacks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={`key-${nanoid(8)}`}>\n                    {columns.map((column) => {\n                      let value: string | number | JSX.Element[] | JSX.Element\n                      if (column.id === 'other'){\n                        return (\n                          <TableCell>\n                            <Button data-bizpack-id={row.id} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                              <MoreVertIcon />\n                            </Button>\n                            <Menu\n                                  id=\"simple-menu\"\n                                  anchorEl={anchorEl}\n                                  keepMounted\n                                  open={Boolean(anchorEl)}\n                                  onClose={handleClose}\n                              >\n                              <MenuItem className={classes.moreMenue} onClick={() => {\n                                const bizpackId = anchorEl ? anchorEl.dataset.bizpackId : '';\n                                if (bizpackId) {\n                                  moveEditBizpack(bizpackId)\n                                }\n                              }}>編集</MenuItem>\n                              <MenuItem className={classes.moreMenue} onClick={() => {\n                                const bizpackId = anchorEl ? anchorEl.dataset.bizpackId : '';\n                                if (bizpackId) {\n                                  DeleteBizpack(bizpackId)\n                                }\n                              }}>削除</MenuItem>\n                            </Menu>\n                          </TableCell>\n                        )\n                      } else if (column.id === 'products') {\n                        value = (row[\"products\"]).map(product => <Chip className={classes.product} key={`ID-${nanoid(8)}`} size=\"small\" label={product.name} />)\n                      } else if (column.id === 'isPublic' && row[column.id]) {\n                        value = \"公開中\"\n                      } else if (column.id === 'isPublic') {\n                        value = \"下書き\"\n                      } else if(column.id === 'category') {\n                        return (<TableCell align={column.align}>\n                            <CategoryIcon categoryId={row[column.id]}/>\n                        </TableCell>)\n                      } else {\n                        value = row[column.id]\n                      }\n                      return (\n                        <TableCell key={`key-${nanoid(8)}`} align={column.align} className={classes.tableBody}>\n                          {value}\n                        </TableCell>\n                      )\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 50, 100]}\n          component=\"div\"\n          count={bizpacks.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Layout>\n  );\n}\n\nexport default BizPackIndex","export const bizpackState = {\n  category: { type: 1 },\n  title: \"\",\n  products: [{name: \"sample\"}],\n  industry: \"\",\n  scale: 0,\n  description: \"\",\n  unitPrice: 0,\n  duration: 0,\n  isPublic: false\n}\n\nexport const errorState = {\n  severity: \"error\",\n  message: \"\",\n  isOpen: false\n}\n","export const responseFormat = (bizpack: any) => {\n  return {\n    category: { type: bizpack.category.type },\n    title: bizpack.title,\n    products: bizpack.products.map((product: any) => { return { name: product.name } }),\n    industry: bizpack.industry,\n    scale: bizpack.scale,\n    description: bizpack.description,\n    unitPrice: bizpack.unitPrice,\n    duration: bizpack.duration,\n    isPublic: bizpack.isPublic\n  }\n}","import React, { useEffect, useState } from 'react'\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Grid, CssBaseline, TextField, Paper, Switch, FormControl, FormControlLabel, Button, Card } from \"@material-ui/core\"\nimport Layout from '../../../../../layouts/mypage/specialist'\nimport { bizpackState, errorState } from './store'\nimport { responseFormat } from './actions'\nimport { apiUrl, get, put } from '../../../../../libs/fetch'\nimport styles from './index.module.css'\n\nconst BizPackEdit: React.FC = () => {\n  const history = useHistory()\n  const { id } = useParams();\n  const [bizpack, setBizpack] = useState(bizpackState);\n  const [errMessage, setErrMessage] = useState(errorState)\n\n  const { register, errors } = useForm({\n    mode: 'onBlur',\n    reValidateMode: 'onChange'\n  })\n\n  const btnDisabler = Boolean(errors.category) || Boolean(errors.title) || Boolean(errors.industry) || Boolean(errors.scale) || Boolean(errors.description) || Boolean(errors.unitPrice) || Boolean(errors.duration)\n\n  // TODO: エラー処理\n  const onSubmit = async () => {\n    console.log('update');\n    const res = await put(`${apiUrl}/mypage/bizpacks/${id}`, bizpack)\n                        .then(res => res.json())\n    if (res.status == 200) {\n      history.push(\"/mypage/specialist/bizpacks\")\n    }\n  }\n\n  const setValue = (obj: object) => {\n    setBizpack(Object.assign({}, bizpack, obj))\n  }\n\n  useEffect(() => {\n    const getBizpack = async () => {\n      const res = await get(`${apiUrl}/mypage/bizpacks/${id}`)\n                          .then(res => res.json())\n\n      setBizpack(responseFormat(res.data));\n    }\n\n    getBizpack();\n  }, [])\n\n  return (\n    <Layout>\n      <Grid container component=\"main\" >\n          <CssBaseline />\n          <Grid item xs={12} sm={7} md={5} >\n                <h1 className={styles.title} >bizpack編集</h1>\n                <Card variant=\"outlined\">\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                      <Grid item xs={10} sm={10} md={10} className={styles.container} >\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"category\"\n                          label=\"category\"\n                          name=\"category\"\n                          autoComplete=\"category\"\n                          autoFocus\n                          value={bizpack.category.type}\n                          onChange={(e) => setValue({ category: { type: e.target.value } })}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.category)}\n                          helperText={errors.category && \"入力必須です\"}\n                        />\n                        <ReactTagInput\n                          placeholder=\"input SaaS tools\"\n                          tags={bizpack.products.map(product => { return product.name })}\n                          onChange={(newTags) => setValue({ products: newTags.map(product => { return { name: product } }) })}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          id=\"industry\"\n                          label=\"industry\"\n                          name=\"industry\"\n                          autoComplete=\"industry\"\n                          autoFocus\n                          value={bizpack.industry}\n                          onChange={e => setValue({industry: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.industry)}\n                          helperText={errors.industry && \"入力必須です\"}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"scale\"\n                          label=\"scale\"\n                          name=\"scale\"\n                          autoComplete=\"scale\"\n                          autoFocus\n                          value={bizpack.scale}\n                          onChange={e => setValue({scale: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.scale)}\n                          helperText={errors.scale && \"入力必須です\"}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          id=\"title\"\n                          label=\"title\"\n                          name=\"title\"\n                          autoComplete=\"title\"\n                          autoFocus\n                          value={bizpack.title}\n                          onChange={e => setValue({title: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.title)}\n                          helperText={errors.title && \"入力必須です\"}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          id=\"description\"\n                          label=\"description\"\n                          name=\"description\"\n                          autoComplete=\"description\"\n                          autoFocus\n                          value={bizpack.description}\n                          onChange={e => setValue({description: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.description)}\n                          helperText={errors.description && \"入力必須です\"}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"unitPrice\"\n                          label=\"unitPrice\"\n                          name=\"unitPrice\"\n                          autoComplete=\"unitPrice\"\n                          autoFocus\n                          value={bizpack.unitPrice}\n                          onChange={e => setValue({unitPrice: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.unitPrice)}\n                          helperText={errors.unitPrice && \"入力必須です\"}\n                        />\n                        <TextField\n                          variant=\"outlined\"\n                          margin=\"normal\"\n                          fullWidth\n                          required\n                          type=\"number\"\n                          id=\"duration\"\n                          label=\"duration\"\n                          name=\"duration\"\n                          autoComplete=\"duration\"\n                          autoFocus\n                          value={bizpack.duration}\n                          onChange={e => setValue({duration: e.target.value})}\n                          inputRef={register({ required: true })}\n                          error={Boolean(errors.duration)}\n                          helperText={errors.duration && \"入力必須です\"}\n                        />\n                        <FormControl component=\"label\">\n                          <FormControlLabel\n                            control={\n                              <Switch\n                                checked={bizpack.isPublic}\n                                onChange={() => setBizpack({ ...bizpack, isPublic: !bizpack.isPublic })}\n                                name=\"gilad\"\n                              />\n                            }\n                            label={bizpack.isPublic ? \"公開\" : \"下書き保存\"}\n                          />\n                        </FormControl>\n                        <Grid className={styles.buttonWrapper}>\n                          <Button\n                            fullWidth\n                            // type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={btnDisabler}\n                            onClick={onSubmit}\n                          >\n                            bizpackを更新する\n                          </Button>\n                        </Grid>\n                        {/* {errMessage.isOpen && <SnackBar severity={errMessage.severity} message={errMessage.message} isOpen={errMessage.isOpen} stateFunc={changeOpenStatus} />} */}\n                        </Grid>\n                     </Grid>\n                </Card>\n            </Grid>\n            </Grid>\n    </Layout>\n  )\n}\n\nexport default BizPackEdit","import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Grid, Card, Typography, CardContent } from \"@material-ui/core\"\nimport { useLocation } from 'react-router-dom'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nimport threadState from './store'\nimport { db } from '../../firebase'\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    container: {\n        width: '100%',\n        marginBottom: '10px'\n    },\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n}))\n\ntype thread = { thread: typeof threadState }\nconst ThreacNew: React.FC = () => {\n    const classes = useStyles()\n    const location = useLocation<thread>();\n    const thread = location.state.thread\n    const [editThread, setEditThread] = useState(thread)\n    console.log(editThread)\n\n    const setValue = (obj: object) => {\n        setEditThread(Object.assign({}, thread, obj))\n      }\n\n      const onSubmit = async () => {\n        db.collection(\"threads\")\n            .doc(thread.id)\n            .set({\n                title: editThread.title,\n                description: editThread.description,\n                updatedAt: new Date(),\n            }, {merge: true})\n      }\n\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs={7}> <Typography variant=\"h6\" component=\"h2\" className={classes.title}>設定されたミーティング一覧</Typography></Grid>\n                <Grid item xs={7}>\n                    <Card  className={classes.container} variant=\"outlined\">\n                        <CardContent>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id=\"title\"\n                                label=\"title\"\n                                value={editThread.title}\n                                onChange={e => setValue({title: e.target.value})}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                id=\"description\"\n                                label=\"description\"\n                                value={editThread.description}\n                                onChange={e => setValue({description: e.target.value})}\n                            />\n                            <Button\n                                fullWidth\n                                // type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={onSubmit}\n                            >\n                                スレッドを更新する\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default ThreacNew","import React  from 'react'\nimport Cookies from 'js-cookie'\nimport {format} from 'date-fns'\nimport ReactMarkdown from 'react-markdown';\n\n\nimport { existMessageState } from '../store'\nimport styles from './messageContent.module.css'\nimport MessageEdit from './messageEdit'\n\n\nconst MessageBox: React.FC<{message: typeof existMessageState}> = ({message}) => {\n    const userId = Cookies.get('bd-uid') ? parseInt(Cookies.get('bd-uid') as string, 10) : undefined\n    const reg=new RegExp(\"((https?|ftp)(:\\/\\/[-_.!~*\\'()a-zA-Z0-9;\\/?:\\@&=+\\$,%#]+))\")\n\n    const renderRemote = (\n            <div className={styles.remoteContainer}>\n                <div className={styles.icon}>\n                    <img src={message.iconUrl} />\n                </div>\n                <div className={styles.content}>\n                    <div className={styles.name}>\n                        { message.userId}\n                    </div>\n                    <div className={styles.text}>\n                        <ReactMarkdown source={message.message.replace(reg,\"[$1]($1)\")} />\n                    </div>\n                </div>\n                <div className={styles.timestamp}>\n                    {format(message.createdAt, 'MM/dd HH:mm')}\n                </div>\n            </div>\n    )\n\n    const renderLocal = (\n            <div className={styles.hoge}>\n            <div className={styles.localContainer}>\n                <div className={styles.timestamp}>\n                    {format(message.createdAt, 'MM/dd HH:mm')}\n                </div>\n                <div className={styles.content}>\n                    <div className={styles.text}>\n                    <ReactMarkdown source={message.message.replace(reg,\"[$1]($1)\")} />\n                    </div>\n                </div>\n            </div>\n            </div>\n    )\n\n    return (\n        <>\n            <div className={styles.root}>\n                {message.userId === userId ?  (\n                        renderLocal\n                    ) : (\n                        renderRemote\n                    )}\n            </div>\n        </>\n    )\n}\n\nexport default MessageBox","import React, { useState, useEffect } from 'react'\nimport { db } from \"../firebase\"\nimport { wrapDocumentSnapshotData } from '../firebase'\n\nimport { existMessagesState } from '../store'\nimport Message from './messageContent'\nimport styles from './messageBox.module.css'\n\nconst MessageIndex: React.FC<{threadId: number}> = ({threadId}) => {\n    const [messages, setMessages] = useState(existMessagesState)\n    wrapDocumentSnapshotData()\n\n\n    useEffect(() => {\n        const unSub = db.collection(\"messages\").where('threadId', '==', threadId).orderBy('createdAt','asc').onSnapshot((snapshot) => {\n            setMessages(\n                snapshot.docs.map((doc) =>({\n                    id: doc.id,\n                    threadId: doc.data().threadId,\n                    userId: doc.data().userId,\n                    iconUrl: doc.data().iconUrl,\n                    message: doc.data().message,\n                    createdAt: doc.data().createdAt.toDate(),\n                    updatedAt: doc.data().updatedAt.toDate(),\n                })))\n        })\n        return () => {\n            unSub()\n        }\n    }, [])\n\n    return (\n        <>\n            <div className={styles.root}>\n                {messages && messages.map(message => {\n                    return <Message message={message} key={message.id} />\n                })}\n            </div>\n\n        </>\n    )\n}\n\n\nexport default MessageIndex","import React, { useState, useEffect } from 'react'\nimport { TextField, IconButton, Grid, InputAdornment } from \"@material-ui/core\"\nimport Cookies from 'js-cookie'\nimport { useHistory } from 'react-router-dom';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport { messageState } from '../store'\nimport { db } from '../firebase'\n\n\nconst MessageNew: React.FC<{threadId: number}> = ({threadId}) => {\n    const history = useHistory()\n    const [message, setMessage] = useState(messageState)\n\n    useEffect(() => {\n        const userId = Cookies.get('bd-uid') ? parseInt(Cookies.get('bd-uid') as string, 10) : undefined\n        // TODO userIdからiconURLとるロジック作成する\n        const iconUrl = \"https://www.palcloset.jp/shared/pc_pal/event/typy/2019_doraemon/images/dora.png\"\n        if(!userId){ history.push(\"/\")}\n        setMessage(Object.assign(message, {userId, threadId, iconUrl}))\n    }, [])\n\n    const setValue = (obj: object) => {\n        setMessage(Object.assign(message, obj))\n      }\n\n    const onSubmit = async () => {\n    setMessage(Object.assign(message, {createdAt: new Date()}))\n    db.collection(\"messages\").add(message)\n    }\n\n    return (\n        <>\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n                <Grid item xs={12} >\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"message\"\n                        label=\"message\"\n                        multiline\n                        rows={2}\n                        InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                <IconButton onClick={onSubmit}>\n                                    <SendIcon />\n                                </IconButton>\n                              </InputAdornment>\n                            ),\n                        }}\n                        onChange={e => setValue({message: e.target.value})}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default MessageNew","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Grid , Card} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MessageIndex from '../../components/messageBox'\nimport MessageNew from '../../components/messageCreate'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '10px'\n    },\n    }))\n\ntype threadId = { threadId : number }\nconst ThreadShow: React.FC = () => {\n    const classes = useStyles();\n    const location = useLocation<threadId>();\n    const threadId = location.state.threadId\n\n\n    return (\n        <>\n            <Grid container justify=\"center\">\n                <Grid item xs= {6}>\n                    <Card variant=\"outlined\" className={classes.root}>\n                        <MessageIndex threadId={threadId} />\n                        <MessageNew threadId={threadId} />\n                    </Card>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default ThreadShow","export const bizpacksState = [\n    {\n        id: 0,\n        category: 1,\n        products: [{ name: \"\" }],\n        industry: \"\",\n        scale: 0,\n        title: \"\",\n        description: \"\",\n        unitPrice: 0,\n        duration: 0,\n        isPublic: false,\n        userId: 0,\n    }\n]\n\n\nexport const resbizpacksState = [\n    {\n        ID: 0,\n        category: {type: 0},\n        products: [{ name: \"\" }],\n        industry: \"\",\n        scale: 0,\n        title: \"\",\n        description: \"\",\n        unitPrice: 0,\n        duration: 0,\n        isPublic: false,\n        userId: 0\n    }\n]\n\nexport const transactionState = [{\n    ID: 0,\n    bizpackId: 0,\n    Bizpack: {\n        products: [{name: \"\"}],\n        category: { type: 1 },\n        title: \"\",\n        userId: 0,\n        industry: \"\",\n        scale: 0,\n        description: \"\",\n        unitPrice: 0,\n        duration: 0,\n        isPublic: false\n    },\n    status: 1,\n    videoMeetings: [{\n        id: 0,\n        topic: \"\",\n        join_url: \"\",\n        start_time: \"\"\n    }],\n    payments: [{\n        id: 0,\n        transactionId: 0,\n        isPaid: false\n    }],\n    reviews: [{\n        transactionId: 0,\n        userId: 0,\n        message: \"\",\n        rating: 0\n    }]\n}]\n","export default __webpack_public_path__ + \"static/media/Implement.d43642f2.jpg\";","export default __webpack_public_path__ + \"static/media/Operation.53f2ff92.jpg\";","export default __webpack_public_path__ + \"static/media/Planing.6034faeb.jpg\";","import React, { useCallback } from 'react'\nimport { Grid, Card, Typography, Chip, CssBaseline } from '@material-ui/core';\nimport { bizpacksState } from './store'\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport TimerIcon from '@material-ui/icons/Timer';\n\n\nimport Impliment from '../../../../../assets/img/Implement.jpg'\nimport Operation from '../../../../../assets/img/Operation.jpg'\nimport Planing from '../../../../../assets/img/Planing.jpg'\n\nimport styles from './bizpack.module.css'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    product: {\n        marginRight: '5px'\n    },\n    container: {\n        margin: '10px',\n        width: '100%'\n    },\n    context: {\n        padding: '10px'\n    }\n}))\n\n\ntype bizpack = typeof bizpacksState[0]\nconst Bizpack: React.FC<{bizpack: bizpack}>= ({bizpack}) => {\n    const classes = useStyles();\n    const history = useHistory()\n\n    const categoryImage = useCallback((categoryId: number) => {\n        if(categoryId === 1) {\n            return <img className={styles.image} src={Planing} />\n        } else if (categoryId === 2) {\n            return <img className={styles.image} src={Impliment} />\n        } else {\n            return <img className={styles.image} src={Operation} />\n        }\n    }, [bizpack.category])\n\n    const products = useCallback(() => {\n        return bizpack.products.map((product, index) => {\n            console.log(!!bizpack.products)\n            return (bizpack.products &&\n                <Chip\n                    className={classes.product}\n                    key={index}\n                    size=\"small\"\n                    label={product.name}\n                />\n                )\n        })\n    },[bizpack.products])\n\n    const clickHandler = () => {\n        history.push({\n            pathname: '/mypage/client/bizpack',\n            state: {bizpack}\n        })\n    }\n\n\n\n    return (\n        <>\n            <Card onClick={clickHandler} className={classes.container}>\n                <Grid container spacing={2}>\n                    <CssBaseline />\n                    <Grid item xs={12} md={4}>\n                        <div className={styles.imageWrapper}>\n                            {(categoryImage(bizpack.category))}\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={8} className={classes.context}>\n                        <div className={styles.header}>\n                            <div className={styles.product}>{products()}</div>\n                            <div className={styles.title}><h2>{bizpack.title}</h2></div>\n                        </div>\n                        <div className={styles.descriptionWrapper}>\n                            <div>{bizpack.description}</div>\n                        </div>\n                        <div>\n                            <div className={styles.content}>\n                                <div className={styles.iconWrapper}>\n                                    <BusinessIcon fontSize=\"small\"/>\n                                </div>{bizpack.industry}\n                            </div>\n                            <div className={styles.content}>\n                                <div className={styles.iconWrapper}>\n                                    <PeopleIcon fontSize=\"small\"/>\n                                </div>{bizpack.scale}\n                            </div>\n                            <div className={styles.content}>\n                                <div className={styles.iconWrapper}>\n                                    <AccountBalanceIcon fontSize=\"small\"/>\n                                </div>{bizpack.unitPrice}\n                            </div>\n                            <div className={styles.content}>\n                                <div className={styles.iconWrapper}>\n                                    <TimerIcon fontSize=\"small\"/>\n                                </div>{bizpack.duration}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Card>\n        </>\n    )\n}\n\nexport default Bizpack","import React, {useState, useEffect } from 'react'\nimport Layout from '../../../../../layouts/mypage/specialist';\nimport { Grid, InputBase, IconButton, Paper } from '@material-ui/core';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { bizpacksState, resbizpacksState, transactionState } from './store'\nimport { apiUrl, get } from '../../../../../libs/fetch'\n\nimport styles from './index.module.css'\nimport Bizpack from './bizpack'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    sideBar: {\n        height: '600px',\n        backgroundColor: 'rgb(242,243,243)',\n        padding: '10px'\n    },\n    searchContainer: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n      },\n    iconButton: {\n        padding: 10,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1\n    },\n}))\n\ntype transaction = typeof transactionState[0]\ntype resBizpack = typeof resbizpacksState[0]\nconst ClientBizPackIndex: React.FC = () => {\n    const classes = useStyles()\n    const [bizpacks, setBizpacks] = useState(bizpacksState)\n\n    useEffect(() => {\n        const createData = (bizpack: resBizpack) => {\n            return {\n                id: bizpack.ID,\n                category: bizpack.category.type,\n                title: bizpack.title,\n                products: bizpack.products.map(p => { return { name: p.name } }),\n                industry: bizpack.industry,\n                scale: bizpack.scale,\n                description: bizpack.description,\n                unitPrice: bizpack.unitPrice,\n                duration: bizpack.duration,\n                isPublic: bizpack.isPublic,\n                userId: bizpack.userId,\n            }\n        }\n\n        const filterBizpacks = async(bizpacks: resBizpack[]) => {\n            const res = await get(`${apiUrl}/mypage/transaction/`)\n                                                .then(result => result.json())\n\n            if(res && res.data){\n                const transactionBizpackIds = res.data.map((transaction: transaction)=> {return transaction.bizpackId})\n                const bizpackIds = bizpacks.map(bizpack => {return bizpack.ID})\n                const contractedBizpackIds = bizpackIds.filter(id => !transactionBizpackIds.includes(id))\n                return bizpacks.filter(bizpack => contractedBizpackIds.includes(bizpack.ID) )\n            }\n        }\n\n        const fetchBizpacks = async () => {\n            const res = await get(`${apiUrl}/mypage/client/bizpacks`)\n                                .then(result => result.json())\n            if(res && res.data){\n                console.log(res.data)\n                filterBizpacks(res.data).then((filteredBizpacks) => {\n                    if(!filteredBizpacks) return\n                    const reshapeBizpacks = filteredBizpacks.map((bizpack: resBizpack) => createData(bizpack))\n                    setBizpacks(reshapeBizpacks);\n                })\n            }\n        }\n        fetchBizpacks();\n    }, [])\n\n    return (\n        <>\n            <Grid container spacing={4}>\n                <Grid item xs={12} sm={8}>\n                {bizpacks.map(bizpack => {\n                    return <Bizpack bizpack={bizpack}/>\n                 })}\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <Grid className={classes.sideBar}>\n                        {/* TODO 検索機能作成する */}\n                        <Paper component=\"form\" className={classes.searchContainer}>\n                            <InputBase\n                                className={classes.input}\n                                placeholder=\"Search\"\n                            />\n                            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                                <SearchIcon />\n                            </IconButton>\n                        </Paper>\n                        <div className={styles.sidebar}>\n                            <p>search component</p>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default ClientBizPackIndex","import React, {useState, useEffect, useCallback } from 'react'\nimport Layout from '../../../../../layouts/mypage/specialist';\nimport { useLocation } from 'react-router-dom'\nimport { Grid, Card , CssBaseline, Typography, Chip, Button} from '@material-ui/core';\nimport { makeStyles , Theme} from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nimport { bizpacksState } from './store'\nimport { apiUrl, post } from '../../../../../libs/fetch'\nimport { Category } from '@material-ui/icons'\nimport styles from './index.module.css';\n\n// import styles from './index.module.css'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    label: {\n        fontWeight:'bold'\n    },\n    data: {}\n    ,\n    title: {\n        fontSize: '14px',\n        margin: '15px',\n        fontWeight: 'bold'\n    },\n    container: {\n        width: '100%',\n        marginBottom: '20px'\n    },\n    content: {\n        padding: '10px',\n    },\n    product: {\n        marginRight: '5px'\n    },\n    button: {\n        fontSize: '12px',\n    }\n}))\n\ntype bizpack = typeof bizpacksState\nconst ClientBizPackShow: React.FC = () => {\n    const history = useHistory()\n    const classes = useStyles()\n    const location = useLocation<{bizpack: bizpack}>();\n    const bizpack = location.state.bizpack\n    console.log('bizpack', bizpack);\n    const products = useCallback(() => {\n        return bizpack.products.map((product, index) => {\n            return (bizpack.products &&\n                <Chip\n                    className={classes.product}\n                    key={index}\n                    size=\"small\"\n                    label={product.name}\n                />\n                )\n        })\n    },[bizpack.products])\n\n    const createTransaction = async() => {\n        const body = {\n            bizpackId: bizpack.id,\n            bizpack: {...bizpack, category: { type: bizpack.category}},\n            status: 1,\n            specialistUserId: bizpack.userId,\n        }\n        const res = await post(`${apiUrl}/mypage/transaction/create`, body)\n                            .then(result => result.json())\n        if(res && res.status === 200){\n            history.push(\"/mypage/client/transactions\")\n        }\n        console.log(res)\n    }\n\n    return (\n        <>\n            <Grid container component=\"main\" >\n                <CssBaseline />\n                <Grid container  justify=\"center\" spacing={4} xs={12}>\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                        <Grid item xs={12} sm={2}>\n                            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>bizpack詳細</Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={8}>\n                            <Grid container justify=\"flex-end\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={()=>createTransaction()}\n                                    className={classes.button}\n                                >\n                                    相談してみる\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={10}>\n                            <Card className={classes.container} variant=\"outlined\">\n                                <Grid container xs={12} spacing={2} className={classes.content}>\n                                    <Grid item xs={4} className={classes.label}>タイトル</Grid>\n                                    <Grid item xs={8} className={classes.data}>{bizpack.description}</Grid>\n                                    <Grid item xs={4} className={classes.label}>詳細</Grid>\n                                    <Grid item xs={8} className={classes.data}>{bizpack.description}</Grid>\n                                    <Grid item xs={4} className={classes.label}>プロダクト</Grid>\n                                    <Grid item xs={8} className={classes.data}>{products()}</Grid>\n                                    <Grid item xs={4} className={classes.label}>業界</Grid>\n                                    <Grid item xs={8} className={classes.data}>{bizpack.industry}</Grid>\n                                    <Grid item xs={4} className={classes.label}>規模</Grid>\n                                    <Grid item xs={8} className={classes.data}>{bizpack.scale}</Grid>\n                                    <Grid item xs={4} className={classes.label}>単価</Grid>\n                                    <Grid item xs={8} className={classes.data}>{bizpack.unitPrice}</Grid>\n                                    <Grid item xs={4} className={classes.label}>稼働時間</Grid>\n                                    <Grid item xs={8} className={classes.data}>{bizpack.duration}</Grid>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Grid container alignItems=\"center\" justify=\"center\">\n                        <Grid item xs={12} sm={10}>\n                            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>スペシャリスト情報</Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={10}>\n                            <Card className={classes.container} variant=\"outlined\">\n                                <Grid container xs={12} spacing={2} className={classes.content}>\n                                    <div className={styles.content}>\n                                        <p>specialist information</p>\n                                    </div>\n                                </Grid>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default ClientBizPackShow","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from 'react-router-dom';\n\nimport PrivateRoute from './privateRoute'\nimport Auth from '../pages/auth/authen/auth'\nimport UserInfo from \"../pages/auth/userInfo/userInfo\"\nimport SpecialistMypage from '../layouts/mypage/specialist'\nimport ClientMypage from '../layouts/mypage/client'\nimport BizpackRoutes from \"./mypage/specialist/BizpackRoutes\"\nimport Profile from \"../pages/mypage/specialist/profile/profile\"\nimport PortfolioIndex from \"../pages/mypage/specialist/portfolio/portfolioIndex\"\nimport PortfolioCreate from \"../pages/mypage/specialist/portfolio/portfolioCreate\"\n\nimport TransactionIndex from \"../pages/mypage/specialist/transaction/index\"\nimport Transaction from \"../pages/mypage/specialist/transaction/show\"\nimport IssueRoutes from \"./mypage/client/IssueRoutes\"\n\n\nimport BizpackNew from \"../pages/mypage/specialist/bizpack/new\"\nimport BizpackIndex from  \"../pages/mypage/specialist/bizpack/index\"\nimport BizpackEdit from \"../pages/mypage/specialist/bizpack/edit\"\n\nimport Chat from \"../pages/mypage/chat\"\nimport ThreadEdit from \"../pages/mypage/chat/thread/edit\"\nimport ThreadShow from \"../pages/mypage/chat/thread/show\"\nimport ClientBizPackIndex from \"../pages/mypage/client/bizpack/index\"\nimport ClientBizPackShow from \"../pages/mypage/client/bizpack/show\"\n\n\nconst RootRouter: React.FC = () => {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <PrivateRoute exact path='/mypage/chat/thread/edit'>\n                    <ThreadEdit />\n                </PrivateRoute>\n                <PrivateRoute exact path='/mypage/chat/thread'>\n                    <ThreadShow />\n                </PrivateRoute>\n\n                <Route exact path='/' component={Auth} />\n                <PrivateRoute path='/userinfo' component={UserInfo} />\n                {/* <BizpackRoutes/> */}\n\n                <PrivateRoute exact path='/mypage/specialist/bizpacks'>\n                    <BizpackIndex />\n                </PrivateRoute>\n                <PrivateRoute path='/mypage/specialist/bizpacks/new'>\n                    <BizpackNew />\n                </PrivateRoute>\n                <PrivateRoute exact path='/mypage/specialist/bizpacks/:id/edit'>\n                    <BizpackEdit />\n                </PrivateRoute>\n\n\n                <PrivateRoute path='/mypage/transactions'>\n                    <SpecialistMypage><TransactionIndex /></SpecialistMypage>\n                </PrivateRoute>\n                <PrivateRoute path='/mypage/transaction'>\n                    <SpecialistMypage><Transaction /></SpecialistMypage>\n                </PrivateRoute>\n\n\n                {/* specialistMypage */}\n                <PrivateRoute path='/mypage/specialist/profile'>\n                    <SpecialistMypage><Profile /></SpecialistMypage>\n                </PrivateRoute>\n                <PrivateRoute path='/mypage/specialist/portfolio/create'>\n                    <SpecialistMypage><PortfolioCreate /></SpecialistMypage>\n                </PrivateRoute>\n                <PrivateRoute path='/mypage/specialist/portfolio'>\n                    <SpecialistMypage><PortfolioIndex /></SpecialistMypage>\n                </PrivateRoute>\n                <Route path='/mypage/specialist' component={SpecialistMypage} />\n\n                {/* clientMypage */}\n                { IssueRoutes }\n                <PrivateRoute path='/mypage/client/bizpacks'>\n                    <ClientMypage><ClientBizPackIndex /></ClientMypage>\n                </PrivateRoute>\n                <PrivateRoute path='/mypage/client/bizpack'>\n                    <ClientMypage><ClientBizPackShow /></ClientMypage>\n                </PrivateRoute>\n                <Route path='/mypage/client' component={ClientMypage} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default RootRouter;\n","import React from 'react';\r\nimport RootRouter from './routes/routes'\r\n\r\nfunction App() {\r\n  return <RootRouter />\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport authReducer from '../pages/auth/authSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"bizpack_header__3c840\",\"imageWrapper\":\"bizpack_imageWrapper__2HrSc\",\"image\":\"bizpack_image__2ArBU\",\"title\":\"bizpack_title__1WuQD\",\"descriptionWrapper\":\"bizpack_descriptionWrapper__2bNzl\",\"content\":\"bizpack_content__1p7bq\",\"iconWrapper\":\"bizpack_iconWrapper__j0Wl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"messageContent_root__VoCBf\",\"hoge\":\"messageContent_hoge__ODUlc\",\"localContainer\":\"messageContent_localContainer__3iV2c\",\"remoteContainer\":\"messageContent_remoteContainer__3UlW3\",\"icon\":\"messageContent_icon__2e4Tx\",\"content\":\"messageContent_content__s_CKS\",\"name\":\"messageContent_name__2gC3r\",\"text\":\"messageContent_text__1Ps2Y\",\"timestamp\":\"messageContent_timestamp__CZvuo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"menuList_list__1zZzs\",\"link\":\"menuList_link__1jAhT\",\"text\":\"menuList_text__3R-RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"clientMenuList_list__3-2EP\",\"link\":\"clientMenuList_link__1qmzP\",\"text\":\"clientMenuList_text__E-iIJ\"};"],"sourceRoot":""}